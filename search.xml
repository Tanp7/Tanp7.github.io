<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>ABC250 A-E题解</title>
      <link href="/2022/05/09/ABC250-A-E%E9%A2%98%E8%A7%A3/"/>
      <url>/2022/05/09/ABC250-A-E%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h2 id="A-Adjacent-Squares"><a href="#A-Adjacent-Squares" class="headerlink" title="A.Adjacent Squares"></a>A.Adjacent Squares</h2><span id="more"></span><h3 id="题面："><a href="#题面：" class="headerlink" title="题面："></a>题面：</h3><p>There is a grid with H horizontal rows and W vertical columns. Let (i,j) denote the square at the i-th row from the top and the j-th column from the left.<br>Find the number of squares that share a side with Square(R,C).Here, two squares(a,b) and (c,d) are said to share a side if and only if ∣a−c∣+∣b−d∣=1 (where ∣x∣ denotes the absolute value of x).</p><h4 id="大意：在-H-W-中找到符合-R-C-∣a−c∣-∣b−d∣-1条件的组合数"><a href="#大意：在-H-W-中找到符合-R-C-∣a−c∣-∣b−d∣-1条件的组合数" class="headerlink" title="大意：在(H,W)中找到符合(R,C)∣a−c∣+∣b−d∣=1条件的组合数."></a>大意：在(H,W)中找到符合(R,C)∣a−c∣+∣b−d∣=1条件的组合数.</h4><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p>照着题目的意思模拟一下即可</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,l,n) for(int i = (int)l; i &lt; (int)n; i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PII std::pair<span class="meta-string">&lt;int, int&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> se second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FAST std::cin.tie(nullptr)-&gt;std::ios_base::sync_with_stdio(false)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> all(x) (x).begin(), (x).end()</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> endl <span class="meta-string">'\n'</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> debug(a) cout &lt;&lt; #a &lt;&lt; <span class="meta-string">" = "</span> &lt;&lt; (a) &lt;&lt; <span class="meta-string">'\n'</span>;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 0x3c3c3c3c <span class="comment">// 1010580540, 7f7f7f7f:2139062143</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> llinf 9223372036854775807</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> muticase() int T;std::cin&gt;&gt;T;while(T--)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> muticases() int std::cin&gt;&gt;T;while(T--)solve();</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">using</span> ll = <span class="keyword">long</span> <span class="keyword">long</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">FAST;</span><br><span class="line"><span class="keyword">int</span> H, W, R, C, ans = <span class="number">0</span>;</span><br><span class="line">std::cin &gt;&gt; H &gt;&gt; W &gt;&gt; R &gt;&gt; C;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= H; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= W; j++) {</span><br><span class="line"><span class="keyword">if</span>(std::<span class="built_in">abs</span>(i-R) + std::<span class="built_in">abs</span>(j-C) == <span class="number">1</span>)</span><br><span class="line">ans++;</span><br><span class="line">}</span><br><span class="line">std::cout &lt;&lt; ans;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="B-Enlarged-Checker-Board"><a href="#B-Enlarged-Checker-Board" class="headerlink" title="B.Enlarged Checker Board"></a>B.Enlarged Checker Board</h2><h3 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h3><p>Tiles are aligned in N horizontal rows and N vertical columns. Each tile has a grid with A horizontal rows and B vertical columns. On the whole, the tiles form a grid X with (A×N) horizontal rows and (B×N) vertical columns.<br>For 1≤i,j≤N, Tile (i,j) denotes the tile at the i-th row from the top and the j-th column from the left. </p><p>Each square of X is painted as follows.</p><pre><code>Each tile is either a white tile or a black tile.Every square in a white tile is painted white; every square in a black tile is painted black.Tile(1,1) is a white tile.Two tiles sharing a side have different colors. Here, Tile(a,b) and Tile (c,d) are said to be sharing a side if and only if ∣a−c∣+∣b−d∣=1 (where ∣x∣ denotes the absolute value of x).</code></pre><p>(1,1) is a white tile.<br>Two tiles sharing a side have different colors. Here, Tile (a,b) and Tile (c,d) are said to be sharing a side if and only if ∣a−c∣+∣b−d∣=1 (where ∣x∣ denotes the absolute value of x).</p><p>Print the grid X in the format specified in the Output section.</p><h3 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h3><p>可以照着样例找规律模拟一下</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,l,n) for(int i = (int)l; i &lt; (int)n; i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PII std::pair<span class="meta-string">&lt;int, int&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FAST std::cin.tie(nullptr)-&gt;std::ios_base::sync_with_stdio(false)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> all(x) (x).begin(), (x).end()</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> endl <span class="meta-string">'\n'</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> debug(a) cout &lt;&lt; #a &lt;&lt; <span class="meta-string">" = "</span> &lt;&lt; (a) &lt;&lt; <span class="meta-string">'\n'</span>;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 0x3c3c3c3c <span class="comment">// 1010580540, 7f7f7f7f:2139062143</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> llinf 9223372036854775807</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> muticase() int T;std::cin&gt;&gt;T;while(T--)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> muticases() int std::cin&gt;&gt;T;while(T--)solve();</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">using</span> ll = <span class="keyword">long</span> <span class="keyword">long</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"><span class="keyword">int</span> n, a, b;</span><br><span class="line"><span class="keyword">int</span> tag;</span><br><span class="line">std::cin &gt;&gt; n &gt;&gt; a &gt;&gt; b;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n*a; i++) {</span><br><span class="line"><span class="keyword">if</span>((i/a)%<span class="number">2</span>==<span class="number">0</span>) tag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> tag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n*b; j++) {</span><br><span class="line"><span class="keyword">if</span>((j / b) % <span class="number">2</span> == tag)</span><br><span class="line">std::cout &lt;&lt; <span class="string">'#'</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">std::cout &lt;&lt; <span class="string">'.'</span>;</span><br><span class="line">}</span><br><span class="line">std::cout &lt;&lt; endl;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="C-Adjacent-Swaps"><a href="#C-Adjacent-Swaps" class="headerlink" title="C. Adjacent Swaps"></a>C. Adjacent Swaps</h2><h3 id="题面-1"><a href="#题面-1" class="headerlink" title="题面"></a>题面</h3><p>N balls are lined up in a row from left to right. Initially, the i-th (1≤i≤N) ball from the left has an integer i written on it.</p><p>Takahashi has performed Q operations. The i-th (1≤i≤Q) operation was as follows.</p><pre><code>Swap the ball with the integer </code></pre><p>xi​ written on it with the next ball to the right. If the ball with the integer</p><pre><code>xi​ written on it was originally the rightmost ball, swap it with the next ball to the left instead.</code></pre><p>Let $ai$​ be the integer written on the i-th (1≤i≤N) ball after the operations. Find $a1,…,aN$.</p><h4 id="大意：给出一个长度为q的询问序列-xi-1-lt-xi-lt-q-对于每个-xi-，如果-pos-xi-n-则与左相邻的一个元素交换，如果-pos-xi-n-则与右相邻的元素交换"><a href="#大意：给出一个长度为q的询问序列-xi-1-lt-xi-lt-q-对于每个-xi-，如果-pos-xi-n-则与左相邻的一个元素交换，如果-pos-xi-n-则与右相邻的元素交换" class="headerlink" title="大意：给出一个长度为q的询问序列$xi$, $1<=xi<=q$,对于每个$xi$，如果$pos[xi] == n$则与左相邻的一个元素交换，如果$pos[xi] != n$则与右相邻的元素交换"></a>大意：给出一个长度为q的询问序列$xi$, $1&lt;=xi&lt;=q$,对于每个$xi$，如果$pos[xi] == n$则与左相邻的一个元素交换，如果$pos[xi] != n$则与右相邻的元素交换</h4><h3 id="题解-2"><a href="#题解-2" class="headerlink" title="题解"></a>题解</h3><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,l,n) for(int i = (int)l; i &lt; (int)n; i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PII std::pair<span class="meta-string">&lt;int, int&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> se second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FAST std::cin.tie(nullptr)-&gt;std::ios_base::sync_with_stdio(false)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> all(x) (x).begin(), (x).end()</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> endl <span class="meta-string">'\n'</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> debug(a) cout &lt;&lt; #a &lt;&lt; <span class="meta-string">" = "</span> &lt;&lt; (a) &lt;&lt; <span class="meta-string">'\n'</span>;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 0x3c3c3c3c <span class="comment">// 1010580540, 7f7f7f7f:2139062143</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> llinf 9223372036854775807</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> muticase() int T;std::cin&gt;&gt;T;while(T--)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> muticases() int std::cin&gt;&gt;T;while(T--)solve();</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">using</span> ll = <span class="keyword">long</span> <span class="keyword">long</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">std::cin &gt;&gt; n;</span><br><span class="line"><span class="function">std::vector&lt;<span class="keyword">int</span>&gt; <span class="title">val</span><span class="params">(n+<span class="number">1</span>)</span>, <span class="title">pos</span><span class="params">(n+<span class="number">1</span>)</span></span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">val[i] = i, pos[i] = i;</span><br><span class="line"><span class="keyword">int</span> q;</span><br><span class="line">std::cin &gt;&gt; q;</span><br><span class="line"><span class="keyword">while</span>(q--) {</span><br><span class="line"><span class="keyword">int</span> x;</span><br><span class="line">std::cin &gt;&gt; x;</span><br><span class="line"><span class="keyword">int</span> p0 = pos[x];</span><br><span class="line"><span class="keyword">int</span> p1 = p0;</span><br><span class="line"><span class="keyword">if</span>(p0 != n) p1++;</span><br><span class="line"><span class="keyword">else</span> p1--;</span><br><span class="line">std::<span class="built_in">swap</span>(val[p0], val[p1]);</span><br><span class="line">std::<span class="built_in">swap</span>(pos[val[p0]], pos[val[p1]]);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">std::cout &lt;&lt; val[i] &lt;&lt; <span class="string">' '</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="D-250-like-Number"><a href="#D-250-like-Number" class="headerlink" title="D.250-like Number"></a>D.250-like Number</h2><h3 id="题面-2"><a href="#题面-2" class="headerlink" title="题面"></a>题面</h3><p>Let us regard an integer k as “similar to 250” if the following condition is satisfied:</p><p>k is represented as k=p×q3 with primes</p><pre><code>p&lt;q.</code></pre><p>How many integers less than or equal to N are “similar to 250”?</p><blockquote><p>数据范围是1e18</p></blockquote><h4 id="大意：在不大于N的素数中找到符合-k-p-q-3-的个数"><a href="#大意：在不大于N的素数中找到符合-k-p-q-3-的个数" class="headerlink" title="大意：在不大于N的素数中找到符合$k=p*q^3$的个数"></a>大意：在不大于N的素数中找到符合$k=p*q^3$的个数</h4><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>素数筛+列举q</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,l,n) for(int i = (int)l; i &lt; (int)n; i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PII std::pair<span class="meta-string">&lt;int, int&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FAST std::cin.tie(nullptr)-&gt;std::ios_base::sync_with_stdio(false)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> all(x) (x).begin(), (x).end()</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> endl <span class="meta-string">'\n'</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> debug(a) cout &lt;&lt; #a &lt;&lt; <span class="meta-string">" = "</span> &lt;&lt; (a) &lt;&lt; <span class="meta-string">'\n'</span>;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 0x3c3c3c3c <span class="comment">// 1010580540, 7f7f7f7f:2139062143</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> llinf 9223372036854775807</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> muticase() int T;std::cin&gt;&gt;T;while(T--)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> muticases() int std::cin&gt;&gt;T;while(T--)solve();</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">using</span> ll = <span class="keyword">long</span> <span class="keyword">long</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1000005</span>;</span><br><span class="line"></span><br><span class="line">std::vector&lt;ll&gt; primes;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>{<span class="comment">//素数筛</span></span><br><span class="line"><span class="function">std::vector&lt;<span class="keyword">bool</span>&gt; <span class="title">fl</span><span class="params">(N, <span class="literal">false</span>)</span></span>; </span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; N; i++) {</span><br><span class="line"><span class="keyword">if</span>(fl[i]) <span class="keyword">continue</span>;</span><br><span class="line">primes.<span class="built_in">push_back</span>(i);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = i*<span class="number">2</span>; j &lt; N; j+=i)</span><br><span class="line">fl[j] = <span class="literal">true</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">f</span><span class="params">(ll p, ll q)</span> </span>{</span><br><span class="line"><span class="keyword">double</span> est = <span class="number">1</span>;</span><br><span class="line">est = (q * q * q);</span><br><span class="line">est *= p;</span><br><span class="line"><span class="keyword">return</span> est;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"><span class="built_in">init</span>();</span><br><span class="line">ll n;</span><br><span class="line">std::cin &gt;&gt; n;</span><br><span class="line">ll ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> q = primes.<span class="built_in">size</span>() - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> p = <span class="number">0</span>; p &lt; primes.<span class="built_in">size</span>(); p++) {</span><br><span class="line"><span class="keyword">while</span>(p &lt; q &amp;&amp; <span class="built_in">f</span>(primes[p], primes[q]) &gt; n)</span><br><span class="line">q--;</span><br><span class="line"><span class="keyword">if</span>(p &gt;= q)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">ans += q - p;</span><br><span class="line">}</span><br><span class="line">std::cout &lt;&lt; ans;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="E-Prefix-Equality"><a href="#E-Prefix-Equality" class="headerlink" title="E.Prefix Equality"></a>E.Prefix Equality</h2><h3 id="题面：-1"><a href="#题面：-1" class="headerlink" title="题面："></a>题面：</h3><p>You are given integer sequences A=(a1​,…,aN​) and B=(b1​,…,bN​), each of length N.</p><p>For i=1,…,Q, answer the query in the following format.</p><pre><code>If the set of values contained in the first </code></pre><p>xi​ terms of A, (a1​,…,axi​​), and the set of values contained in the first yi​ terms of B, (b1​,…,byi​​), are equal, then print Yes; otherwise, print No.</p><h4 id="大意：给定两个数组a、b，对于每个询问-x-y-，求出-Set-ai-1-lt-i-lt-x-和-Set-bi-1-lt-i-lt-y-是否相同，（可以用c-STL中的set）来实现。"><a href="#大意：给定两个数组a、b，对于每个询问-x-y-，求出-Set-ai-1-lt-i-lt-x-和-Set-bi-1-lt-i-lt-y-是否相同，（可以用c-STL中的set）来实现。" class="headerlink" title="大意：给定两个数组a、b，对于每个询问${x,y}$，求出$Set {-ai(1<=i<=x)}$和$Set{-bi (1<=i<=y)}$是否相同，（可以用c++ STL中的set）来实现。"></a>大意：给定两个数组a、b，对于每个询问${x,y}$，求出$Set {-ai(1&lt;=i&lt;=x)}$和$Set{-bi (1&lt;=i&lt;=y)}$是否相同，（可以用c++ STL中的set）来实现。</h4><h3 id="题解：-1"><a href="#题解：-1" class="headerlink" title="题解："></a>题解：</h3><p>可以使用哈希+set的做法实现。</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i,l,n) for(int i = (int)l; i &lt; (int)n; i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PII std::pair<span class="meta-string">&lt;int, int&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FAST std::cin.tie(nullptr)-&gt;std::ios_base::sync_with_stdio(false)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> all(x) (x).begin(), (x).end()</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> endl <span class="meta-string">'\n'</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> debug(a) cout &lt;&lt; #a &lt;&lt; <span class="meta-string">" = "</span> &lt;&lt; (a) &lt;&lt; <span class="meta-string">'\n'</span>;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 0x3c3c3c3c <span class="comment">// 1010580540, 7f7f7f7f:2139062143</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> llinf 9223372036854775807</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> muticase() int T;std::cin&gt;&gt;T;while(T--)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> muticases() int std::cin&gt;&gt;T;while(T--)solve();</span></span><br><span class="line"><span class="function">std::mt19937_64 <span class="title">mrand</span><span class="params">(std::random_device{}())</span></span>;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">using</span> ll = <span class="keyword">long</span> <span class="keyword">long</span>;</span><br><span class="line"><span class="keyword">using</span> ull = <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">201000</span>;</span><br><span class="line">std::map&lt;<span class="keyword">int</span>, ull&gt; cnt;</span><br><span class="line">std::set&lt;<span class="keyword">int</span>&gt; cnta, cntb;</span><br><span class="line">ull ha[N], hb[N];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, a[N], b[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">FAST;</span><br><span class="line">std::cin &gt;&gt; n;</span><br><span class="line"><span class="built_in">rep</span>(i, <span class="number">1</span>, n+<span class="number">1</span>) {</span><br><span class="line">std::cin &gt;&gt; a[i];</span><br><span class="line"><span class="keyword">if</span>(!cnt.<span class="built_in">count</span>(a[i])) cnt[a[i]] = <span class="built_in">mrand</span>();</span><br><span class="line">ha[i] = ha[i<span class="number">-1</span>];</span><br><span class="line"><span class="keyword">if</span>(!cnta.<span class="built_in">count</span>(a[i])) ha[i] += cnt[a[i]];</span><br><span class="line">cnta.<span class="built_in">insert</span>(a[i]);</span><br><span class="line">}</span><br><span class="line"><span class="built_in">rep</span>(i, <span class="number">1</span>, n+<span class="number">1</span>) {</span><br><span class="line">std::cin &gt;&gt; b[i];</span><br><span class="line"><span class="keyword">if</span>(!cnt.<span class="built_in">count</span>(b[i])) cnt[b[i]] = <span class="built_in">mrand</span>();</span><br><span class="line">hb[i] = hb[i<span class="number">-1</span>];</span><br><span class="line"><span class="keyword">if</span>(!cntb.<span class="built_in">count</span>(b[i])) hb[i] += cnt[b[i]];</span><br><span class="line">cntb.<span class="built_in">insert</span>(b[i]);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">int</span> q;</span><br><span class="line">std::cin &gt;&gt; q;</span><br><span class="line"><span class="keyword">while</span>(q--) {</span><br><span class="line"><span class="keyword">int</span> x, y;</span><br><span class="line">std::cin &gt;&gt; x &gt;&gt; y;</span><br><span class="line">std::cout &lt;&lt; (ha[x] == hb[y] ? <span class="string">"Yes\n"</span> : <span class="string">"No\n"</span>);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> atc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>代码源每日一题（持续更新）</title>
      <link href="/2022/05/01/%E4%BB%A3%E7%A0%81%E6%BA%90%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%EF%BC%88%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%EF%BC%89/"/>
      <url>/2022/05/01/%E4%BB%A3%E7%A0%81%E6%BA%90%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%EF%BC%88%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p><a href="oj.daimayuan.top">代码源链接</a></p><span id="more"></span><h2 id="1day-特殊的正方形"><a href="#1day-特殊的正方形" class="headerlink" title="1day-特殊的正方形"></a>1day-特殊的正方形</h2><p>输入𝑛，输出𝑛行𝑛列的由<code>+</code>和<code>.</code>组成的正方形，其中最外面一圈全是<code>+</code>，第二圈全是<code>.</code>，…，对于第𝑖圈，如果𝑖是奇数，那么全是<code>+</code>，否则全是<code>.</code>。</p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>一行，一个整数𝑛。</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>𝑛行，为满足题目要求的正方形。注意不要有行末空格。</p><h4 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h4><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10</span><br></pre></td></tr></tbody></table></figure><h4 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h4><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">++++++++++</span><br><span class="line">+........+</span><br><span class="line">+.++++++.+</span><br><span class="line">+.+....+.+</span><br><span class="line">+.+.++.+.+</span><br><span class="line">+.+.++.+.+</span><br><span class="line">+.+....+.+</span><br><span class="line">+.++++++.+</span><br><span class="line">+........+</span><br><span class="line">++++++++++</span><br></pre></td></tr></tbody></table></figure><h4 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h4><p>对于100%的数据，保证2≤𝑛≤100。</p><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p>模拟一下就好了</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ss</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> t)</span></span>{</span><br><span class="line">  <span class="keyword">if</span>(t==<span class="number">1</span>){</span><br><span class="line">    <span class="keyword">while</span>(x--){</span><br><span class="line">      cout &lt;&lt; <span class="string">"+"</span>;</span><br><span class="line">    }</span><br><span class="line">  }<span class="keyword">else</span>{</span><br><span class="line">    <span class="keyword">while</span>(x--){</span><br><span class="line">      cout &lt;&lt; <span class="string">"."</span>;</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">aa</span><span class="params">(<span class="keyword">int</span> x)</span></span>{</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= x; i++){</span><br><span class="line">    <span class="keyword">if</span>(i%<span class="number">2</span>==<span class="number">0</span>)  cout &lt;&lt; <span class="string">"."</span>;</span><br><span class="line">    <span class="keyword">else</span>{</span><br><span class="line">      cout &lt;&lt; <span class="string">"+"</span>;</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bb</span><span class="params">(<span class="keyword">int</span> x)</span></span>{</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = x; i &gt;<span class="number">0</span>; i--){</span><br><span class="line">    <span class="keyword">if</span>(i%<span class="number">2</span>==<span class="number">0</span>){</span><br><span class="line">      cout &lt;&lt; <span class="string">"."</span>;</span><br><span class="line">    }<span class="keyword">else</span>{</span><br><span class="line">      cout &lt;&lt; <span class="string">"+"</span>;</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">  <span class="keyword">int</span> n;</span><br><span class="line">  cin &gt;&gt; n;</span><br><span class="line">  <span class="keyword">int</span> cnt = <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span>(n%<span class="number">2</span>==<span class="number">0</span>){</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n/<span class="number">2</span>; i++){</span><br><span class="line">    <span class="built_in">aa</span>(i);</span><br><span class="line">    <span class="built_in">ss</span>(n<span class="number">-2</span>*i, cnt);</span><br><span class="line">    <span class="built_in">bb</span>(i);</span><br><span class="line">    cnt = -cnt;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">  }</span><br><span class="line">   <span class="keyword">if</span>(n/<span class="number">2</span> %<span class="number">2</span> == <span class="number">0</span>){</span><br><span class="line">      cnt = <span class="number">-1</span>;</span><br><span class="line">    }<span class="keyword">else</span>{</span><br><span class="line">      cnt = <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = n/<span class="number">2</span> - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--){</span><br><span class="line">    <span class="built_in">aa</span>(i);</span><br><span class="line">    <span class="built_in">ss</span>(n<span class="number">-2</span>*i, cnt);</span><br><span class="line">    <span class="built_in">bb</span>(i);</span><br><span class="line">    cnt = -cnt;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">  }</span><br><span class="line">  }<span class="keyword">else</span>{</span><br><span class="line">     <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n/<span class="number">2</span><span class="number">-1</span>; i++){</span><br><span class="line">      <span class="built_in">aa</span>(i);</span><br><span class="line">      <span class="built_in">ss</span>(n<span class="number">-2</span>*i, cnt);</span><br><span class="line">      <span class="built_in">bb</span>(i);</span><br><span class="line">      cnt = -cnt;</span><br><span class="line">      cout &lt;&lt; endl;</span><br><span class="line">    }</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++){</span><br><span class="line">    <span class="keyword">if</span>(i%<span class="number">2</span>==<span class="number">0</span>){</span><br><span class="line">      cout &lt;&lt; <span class="string">"."</span>;</span><br><span class="line">    }<span class="keyword">else</span>{</span><br><span class="line">      cout &lt;&lt; <span class="string">"+"</span>;</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  cout &lt;&lt; endl;</span><br><span class="line">  <span class="keyword">int</span> ttt = n/<span class="number">2</span><span class="number">-1</span>;</span><br><span class="line">  <span class="keyword">if</span>(ttt %<span class="number">2</span> == <span class="number">0</span>){</span><br><span class="line">    cnt = <span class="number">1</span>;</span><br><span class="line">  }<span class="keyword">else</span>{</span><br><span class="line">    cnt = <span class="number">-1</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = ttt; i &gt;= <span class="number">0</span>; i--){</span><br><span class="line">    <span class="built_in">aa</span>(i);</span><br><span class="line">    <span class="built_in">ss</span>(n<span class="number">-2</span>*i, cnt);</span><br><span class="line">    <span class="built_in">bb</span>(i);</span><br><span class="line">    cnt = -cnt;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">  }</span><br><span class="line">  }</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="2day-走楼梯"><a href="#2day-走楼梯" class="headerlink" title="2day-走楼梯"></a>2day-走楼梯</h2><p>楼梯有 𝑛 阶，上楼可以一步上一阶，也可以一步上二阶。</p><p>但你不能连续三步都走两阶，计算走到第𝑛阶共有多少种不同的走法。</p><h4 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h4><p>一行，一个数字，表示𝑛。</p><h4 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出走楼梯的方式总数。</p><h4 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h4><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">6</span><br></pre></td></tr></tbody></table></figure><h4 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h4><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">12</span><br></pre></td></tr></tbody></table></figure><h4 id="数据规模"><a href="#数据规模" class="headerlink" title="数据规模"></a>数据规模</h4><p>对于100%的数据，保证n≤50。</p><h3 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h3><p>简单的dp</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line">ll f[<span class="number">100</span>]; </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">f[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">f[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(i&lt;<span class="number">6</span>)</span><br><span class="line">f[i]=f[i<span class="number">-1</span>]+f[i<span class="number">-2</span>];</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(i==<span class="number">6</span>) f[i]=f[i<span class="number">-1</span>]+f[i<span class="number">-2</span>]<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">f[i]=f[i<span class="number">-1</span>]+f[i<span class="number">-2</span>]-f[i<span class="number">-7</span>];</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld"</span>,f[n]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="3day-走路"><a href="#3day-走路" class="headerlink" title="3day-走路"></a>3day-走路</h2><p>有一条很长的数轴，一开始你在0的位置。接下来你要走<em>𝑛</em>步，第<em>𝑖</em>步你可以往右走<em>𝑎𝑖</em>或者<em>𝑏𝑖</em>。</p><p>问<em>𝑛</em>步之后，0到<em>𝑚</em>的每个位置，能不能走到？</p><h3 id="输入格式-2"><a href="#输入格式-2" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行，两个整数<em>𝑛</em>,<em>𝑚</em>。</p><p>接下来<em>𝑛</em></p><p>行，每行两个整数<em>𝑎𝑖</em>,<em>𝑏𝑖</em>。</p><h3 id="输出格式-2"><a href="#输出格式-2" class="headerlink" title="输出格式"></a>输出格式</h3><p>一行，一共<em>𝑚</em>+1</p><p>个数，每个数都是<code>0</code>或<code>1</code>表示能否走到，数字之间不用空格隔开。</p><h3 id="输入样例"><a href="#输入样例" class="headerlink" title="输入样例"></a>输入样例</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3 10</span><br><span class="line">1 2</span><br><span class="line">2 6</span><br><span class="line">3 3</span><br></pre></td></tr></tbody></table></figure><h3 id="输出样例"><a href="#输出样例" class="headerlink" title="输出样例"></a>输出样例</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">00000011001</span><br></pre></td></tr></tbody></table></figure><h3 id="数据规模-1"><a href="#数据规模-1" class="headerlink" title="数据规模"></a>数据规模</h3><p>对于所有数据，保证1≤<em>𝑛</em>≤100,1≤<em>𝑚</em>≤1e5,1≤<em>𝑎𝑖</em>,<em>𝑏𝑖</em>≤1000。</p><h3 id="题解-2"><a href="#题解-2" class="headerlink" title="题解"></a>题解</h3><p>模拟一下</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">110</span>, M = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> f[N][M]; <span class="comment">// 一维表示步数，二维表示距离，存储的值为1则能到达，反之则不能</span></span><br><span class="line"><span class="keyword">int</span> a[N], b[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">ios_base::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++){</span><br><span class="line">cin &gt;&gt; a[i] &gt;&gt; b[i];</span><br><span class="line">}</span><br><span class="line">f[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n; i++){</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= m; j++){</span><br><span class="line"><span class="keyword">if</span>(f[i][j] &amp;&amp; j+a[i+<span class="number">1</span>]&lt;=m)f[i+<span class="number">1</span>][j+a[i+<span class="number">1</span>]]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(f[i][j] &amp;&amp; j+b[i+<span class="number">1</span>]&lt;=m)f[i+<span class="number">1</span>][j+b[i+<span class="number">1</span>]]=<span class="number">1</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i  &lt;= m; i++){</span><br><span class="line">cout &lt;&lt; f[n][i];</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="4day-简单分数统计"><a href="#4day-简单分数统计" class="headerlink" title="4day-简单分数统计"></a>4day-简单分数统计</h2><p><em>𝑁</em> 个好朋友在codeforces上参加一场包含 <em>𝑀</em> 个题目的比赛, 比赛期间codeforces网站一共有 <em>𝑘</em></p><p> 次提交。</p><p>已知每个题目的分数，</p><p>但是由于他们只能查到在比赛期间codeforces总共的提交记录(其他用户提交的其他题目记录也包含在内, 即存在不属于该场比赛的题目)，</p><p>所以想请你编写一个程序算出他们每个人的分数。</p><h4 id="输入格式-3"><a href="#输入格式-3" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行三个整数 <em>𝑁</em>, <em>𝑀</em>, <em>𝐾</em> 分别表示好朋友的个数, 题目的个数, 和提交的总次数(其中0&lt;<em>𝑁</em>,<em>𝑀</em>,<em>𝐾</em>&lt;=200）。接下来 <em>𝑁</em> 行 第 <em>𝑖</em> 行输入为第 <em>𝑖</em> 个人的id，接下来 <em>𝑀</em> 行 第 <em>𝑗</em> 行输入为第 <em>𝑗</em> 个题目的名称和分数，接下来 <em>𝐾</em> 行 第 <em>𝑘</em> 行输入为第 <em>𝑘</em> 次提交的提交者id, 题目名称和结果(“WA” 或 “AC”, 如果”AC”代表通过这个题目, 提交者获得对应分数)。</p><p>注: 题目名称和id均为仅包含英文字母和数字的字符串, 题目分数为小于等于 1<em>𝑒</em>6 的正整数. 每一行的多个输入之间用空格隔开。所有输入的字符串长度<em>𝑙<strong>𝑒</strong>𝑛<strong>𝑔</strong>𝑡ℎ</em> 满足 0&lt;<em>𝑙<strong>𝑒</strong>𝑛<strong>𝑔</strong>𝑡ℎ</em>≤500。</p><p>所有用户id和题目名称不存在重名, 用户AC了某个题之后之后不会再重复提交该题, 好朋友们只会提交属于比赛的题目。</p><h4 id="输出格式-3"><a href="#输出格式-3" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出 <em>𝑁</em> 行, 第 <em>𝑖</em> 行输出第 <em>𝑖</em> 个人的名字和对应分数 (名字和分数用空格隔开)。</p><h4 id="样例输入-2"><a href="#样例输入-2" class="headerlink" title="样例输入"></a>样例输入</h4><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">2 2 4</span><br><span class="line">GabrielPessoa</span><br><span class="line">beza</span><br><span class="line">metebronca 100</span><br><span class="line">geometry 200</span><br><span class="line">beza metebronca AC</span><br><span class="line">ffern numbertheory AC</span><br><span class="line">GabrielPessoa geometry WA</span><br><span class="line">beza geometry AC</span><br></pre></td></tr></tbody></table></figure><h4 id="样例输出-2"><a href="#样例输出-2" class="headerlink" title="样例输出"></a>样例输出</h4><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GabrielPessoa 0</span><br><span class="line">beza 300</span><br></pre></td></tr></tbody></table></figure><h4 id="样例解释"><a href="#样例解释" class="headerlink" title="样例解释"></a>样例解释</h4><p>beza 过了 metebronca和geometry 拿到 300 分。</p><p>GabrielPessos 没有过题, 所以是 0分。</p><p>还有一些其他选手提交的其他题目忽略不计。</p><h3 id="题解-3"><a href="#题解-3" class="headerlink" title="题解"></a>题解</h3><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ios&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m,k;</span><br><span class="line">map&lt;string, <span class="keyword">int</span>&gt; cnt;</span><br><span class="line">map&lt;string, <span class="keyword">int</span>&gt; playerscore;</span><br><span class="line"><span class="keyword">bool</span> f[<span class="number">101</span>][<span class="number">101</span>];</span><br><span class="line">string name[<span class="number">101</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">ios_base::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m &gt;&gt; k;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++){</span><br><span class="line">cin &gt;&gt; name[i];</span><br><span class="line">playerscore[name[i]] = <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++){</span><br><span class="line">string a; cin &gt;&gt; a;</span><br><span class="line"><span class="keyword">int</span> b; cin &gt;&gt; b;</span><br><span class="line">cnt[a] = b; </span><br><span class="line">}</span><br><span class="line"><span class="keyword">while</span>(k--){</span><br><span class="line">string a, b, c;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line"><span class="keyword">if</span>(c == <span class="string">"AC"</span>){</span><br><span class="line">playerscore[a] += cnt[b];</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++){</span><br><span class="line">cout &lt;&lt; name[i] &lt;&lt; <span class="string">" "</span> &lt;&lt; playerscore[name[i]] &lt;&lt; endl;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="5day-Alice的德州扑克"><a href="#5day-Alice的德州扑克" class="headerlink" title="5day-Alice的德州扑克"></a>5day-Alice的德州扑克</h2><blockquote><p>德州扑克是目前世界上最流行的扑克游戏，全世界有众多相关的比赛，例如是  WSOP，WPT，EPT等，也让这款游戏的玩法变得层出不穷，丰富多变。  不要被简单的游戏规则而误导，复杂多变的比赛状况，让这款游戏在高水平的竞技中会变得非常复杂，这也让人们为德州扑克给出了这样一句评价  ”用一刻就能学会，但要用一生才能掌握” 。 </p></blockquote><p>现在我们并不在乎游戏规则是什么，因为 Alice 是一个德州扑克高手，他对于德州扑克的规则烂熟于心，不过他每次都记不得牌型的大小关系，他知道你是一个编程高手，所以他想让你帮他写一个程序：输入五张牌的大小和花色，输出这五张牌能组成的最大牌型.你能帮帮他吗?</p><p>为了降低你的编程难度，我们规定：</p><ol><li><strong>输入的牌都是来源于同一副扑克牌</strong></li><li><strong>输入的牌的点数都是非递减的</strong></li><li><strong>所有花色没有大小之分</strong></li></ol><p>下面给出各牌型，(从大到小)</p><ol><li>**皇家同花顺(ROYAL FLUSH)<strong>：五张顺连的牌(点数连续单调递增)，</strong>且最大的一张牌是A(Ace)**，并且五张牌的花色相同</li><li>**同花顺(STRAIGHT FLUSH)<strong>：五张顺连的牌(点数连续单调递增)，</strong>不规定最大的一张牌是A(Ace)**，并且五张牌的花色相同</li><li>**四条(FOUR OF A KIND)**：至少四张牌的点数相同</li><li>**葫芦(FULL HOUSE)**：至少三张牌的点数相同，并且除此之外还有两张牌的点数相同</li><li>**同花(FLUSH)**：五张牌的花色都相同</li><li>**顺子(STRAIGHT)**：五张顺连的牌(点数连续单调递增)，不要求五张牌的花色相同</li><li><strong>特别注意</strong>：由于 Alice 是个谨慎的人，所以比 <strong>三条(THREE OF A KIND)</strong> (包括三条) 小的牌型 Alice 不在乎他们的大小关系，你只需要告诉 Alice 弃牌就行</li></ol><h4 id="输入格式-4"><a href="#输入格式-4" class="headerlink" title="输入格式"></a>输入格式</h4><p>输入两行，每行五个数字，第一行的第 <em>𝑖</em></p><p> 个字符表示第 <em>𝑖</em></p><p> 张扑克的点数，</p><p>第二行的第 <em>𝑖</em></p><p> 个数字表示第 <em>𝑖</em></p><p> 张扑克花色。**(保证输入的牌的点数是非递减的，且所有输入均合法)**。</p><p>点数和对应输入的数字：</p><ul><li>2−10</li></ul><p> 对应 2 - 10</p><p><em>𝐽</em>(<em>𝐽<strong>𝑎</strong>𝑐**𝑘</em>)</p><p> 对应 11</p><p><em>𝑄</em>(<em>𝑄<strong>𝑢</strong>𝑒<strong>𝑒</strong>𝑛</em>)</p><p> 对应 12</p><p><em>𝐾</em>(<em>𝐾<strong>𝑖</strong>𝑛**𝑔</em>)</p><p> 对应 13</p><p><em>𝐴</em>(<em>𝐴<strong>𝑐</strong>𝑒</em>)</p><ul><li> 对应 14</li></ul><p>花色和对应输入的数字：</p><ul><li>黑桃 (Spades) 对应 1</li><li>方片 (Diamonds) 对应 2</li><li>红桃 (Hearts) 对应 3</li><li>梅花 (Clubs) 对应 4</li></ul><h4 id="输出格式-4"><a href="#输出格式-4" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出这五张牌能组成的最大牌型。</p><ul><li>如果最大是皇家同花顺输出 “ROYAL FLUSH”</li><li>如果最大是同花顺输出 “STRAIGHT FLUSH”</li><li>如果最大是四条输出 “FOUR OF A KIND”</li><li>如果最大是葫芦输出 “FULL HOUSE”</li><li>如果最大是同花输出 “FLUSH”</li><li>如果最大是顺子输出 “STRAIGHT”</li><li>如果最大的牌型小于等于三条输出”FOLD”，劝 Alice 弃牌</li><li>输出不包括引号</li></ul><h4 id="样例输入1"><a href="#样例输入1" class="headerlink" title="样例输入1"></a>样例输入1</h4><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">10 11 12 13 14</span><br><span class="line">1 1 1 1 1</span><br></pre></td></tr></tbody></table></figure><h4 id="样例输出1"><a href="#样例输出1" class="headerlink" title="样例输出1"></a>样例输出1</h4><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ROYAL FLUSH</span><br></pre></td></tr></tbody></table></figure><h4 id="样例输入2"><a href="#样例输入2" class="headerlink" title="样例输入2"></a>样例输入2</h4><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">10 11 12 13 14</span><br><span class="line">1 2 1 3 4</span><br></pre></td></tr></tbody></table></figure><h4 id="样例输出2"><a href="#样例输出2" class="headerlink" title="样例输出2"></a>样例输出2</h4><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">STRAIGHT</span><br></pre></td></tr></tbody></table></figure><h4 id="样例输入3"><a href="#样例输入3" class="headerlink" title="样例输入3"></a>样例输入3</h4><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">6 6 6 7 7</span><br><span class="line">1 2 3 1 3</span><br></pre></td></tr></tbody></table></figure><h4 id="样例输出3"><a href="#样例输出3" class="headerlink" title="样例输出3"></a>样例输出3</h4><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FULL HOUSE</span><br></pre></td></tr></tbody></table></figure><h4 id="样例输入4"><a href="#样例输入4" class="headerlink" title="样例输入4"></a>样例输入4</h4><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3 3 6 6 9</span><br><span class="line">1 2 1 2 1</span><br></pre></td></tr></tbody></table></figure><h4 id="样例输出4"><a href="#样例输出4" class="headerlink" title="样例输出4"></a>样例输出4</h4><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FOLD</span><br></pre></td></tr></tbody></table></figure><h3 id="题解-4"><a href="#题解-4" class="headerlink" title="题解"></a>题解</h3><p>模拟一下</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ios&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dianshu[<span class="number">15</span>];</span><br><span class="line"><span class="keyword">int</span> huase[<span class="number">5</span>];</span><br><span class="line"><span class="keyword">int</span> j = <span class="number">0</span>, s, d;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">ios_base::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)cin &gt;&gt; dianshu[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)cin &gt;&gt; huase[i];</span><br><span class="line"></span><br><span class="line"><span class="built_in">sort</span>(huase,huase+<span class="number">5</span>);</span><br><span class="line">s = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++){</span><br><span class="line"><span class="keyword">if</span>(huase[i] == huase[i+<span class="number">1</span>])s++;</span><br><span class="line">}</span><br><span class="line">d = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">bool</span> tmp = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++){</span><br><span class="line"><span class="keyword">if</span>(dianshu[i] == dianshu[i+<span class="number">1</span>]){</span><br><span class="line">d++;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(d==<span class="number">3</span>&amp;&amp; ((dianshu[i] != dianshu[i<span class="number">-1</span>]) || (dianshu[i<span class="number">-1</span>]!=dianshu[i<span class="number">-2</span>])))</span><br><span class="line">tmp = <span class="literal">true</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(dianshu[<span class="number">4</span>]-dianshu[<span class="number">3</span>] == <span class="number">1</span> &amp;&amp; dianshu[<span class="number">3</span>]-dianshu[<span class="number">2</span>] == <span class="number">1</span> &amp;&amp; dianshu[<span class="number">2</span>]-dianshu[<span class="number">1</span>] == <span class="number">1</span> &amp;&amp; dianshu[<span class="number">1</span>]-dianshu[<span class="number">0</span>] == <span class="number">1</span>)</span><br><span class="line">j = <span class="number">6</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(s == <span class="number">4</span>)j = <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(d &gt;= <span class="number">3</span>){</span><br><span class="line"><span class="keyword">if</span>(tmp)j = <span class="number">4</span>;</span><br><span class="line"><span class="keyword">else</span> j = <span class="number">3</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(s == <span class="number">4</span> &amp;&amp; dianshu[<span class="number">4</span>]-dianshu[<span class="number">3</span>] == <span class="number">1</span> &amp;&amp; dianshu[<span class="number">3</span>]-dianshu[<span class="number">2</span>] == <span class="number">1</span> &amp;&amp; dianshu[<span class="number">2</span>]-dianshu[<span class="number">1</span>] == <span class="number">1</span> &amp;&amp; dianshu[<span class="number">1</span>]-dianshu[<span class="number">0</span>] == <span class="number">1</span>){</span><br><span class="line"><span class="keyword">if</span>(dianshu[<span class="number">4</span>]==<span class="number">14</span>)</span><br><span class="line">j = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">j = <span class="number">2</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(j == <span class="number">0</span>)cout &lt;&lt; <span class="string">"FOLD"</span>;</span><br><span class="line"><span class="keyword">if</span>(j == <span class="number">1</span>)cout &lt;&lt; <span class="string">"ROYAL FLUSH"</span>;</span><br><span class="line"><span class="keyword">if</span>(j == <span class="number">2</span>)cout &lt;&lt; <span class="string">"STRAIGHT FLUSH"</span>;</span><br><span class="line"><span class="keyword">if</span>(j == <span class="number">3</span>)cout &lt;&lt; <span class="string">"FOUR OF A KIND"</span>;</span><br><span class="line"><span class="keyword">if</span>(j == <span class="number">4</span>)cout &lt;&lt; <span class="string">"FULL HOUSE"</span>;</span><br><span class="line"><span class="keyword">if</span>(j == <span class="number">5</span>)cout &lt;&lt; <span class="string">"FLUSH"</span>;</span><br><span class="line"><span class="keyword">if</span>(j == <span class="number">6</span>)cout &lt;&lt; <span class="string">"STRAIGHT"</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="6day-订单编号"><a href="#6day-订单编号" class="headerlink" title="6day-订单编号"></a>6day-订单编号</h2><p>   <a href="https://space.bilibili.com/5055">小缘</a>开了一家公司，生意很好，每天都会收到很多订单，自动交易系统会自动给这些订单生成没有重复的订单编号。但是有一天，系统出现了未知的错误，导致当天的订单编号可能有重复的，这可把小缘急坏了。你可以帮助小缘按照规则给这些订单重新编号吗？</p><p>   按照时间先后顺序给出 <em>𝑁</em> 个正整数作为原订单编号，你需要按照规则依次赋予这些订单新的编号，对于任意一个订单，要找到大于等于其原订单编号且未被使用过的（没有被之前的订单作为新的订单编号）的最小整数，作为它的新订单编号。</p><p>   例如：   原订单编号依次为1 2 3 1，则新订单编号应该为1 2 3 4   （前3个订单的原订单编号都没有使用过，所以用其原订单编号即可，对于第四个订单，原订单编号为1，而1, 2, 3都已经被使用过，所以新订单编号为4）。</p><h4 id="输入格式-5"><a href="#输入格式-5" class="headerlink" title="输入格式"></a>输入格式</h4><p>   第一行输入一个整数 <em>𝑁</em>(1≤<em>𝑁</em>≤5×1e5)。</p><p>   第二行输入 <em>𝑁</em> 个数 <em>𝑎𝑖</em>(1≤<em>𝑎</em>𝑖*≤1e9) 作为原订单编号。</p><h4 id="输出格式-5"><a href="#输出格式-5" class="headerlink" title="输出格式"></a>输出格式</h4><p>   输出一行，包含 <em>𝑁</em> 个整数为新的订单编号。</p><h4 id="样例输入1-1"><a href="#样例输入1-1" class="headerlink" title="样例输入1"></a>样例输入1</h4><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">6</span><br><span class="line">2 3 4 1 1 1</span><br></pre></td></tr></tbody></table></figure><h4 id="样例输出1-1"><a href="#样例输出1-1" class="headerlink" title="样例输出1"></a>样例输出1</h4><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2 3 4 1 5 6</span><br></pre></td></tr></tbody></table></figure><h4 id="样例输入2-1"><a href="#样例输入2-1" class="headerlink" title="样例输入2"></a>样例输入2</h4><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">1000000000 1000000000 1000000000</span><br></pre></td></tr></tbody></table></figure><h4 id="样例输出2-1"><a href="#样例输出2-1" class="headerlink" title="样例输出2"></a>样例输出2</h4><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1000000000 1000000001 1000000002</span><br></pre></td></tr></tbody></table></figure><h4 id="样例输入3-1"><a href="#样例输入3-1" class="headerlink" title="样例输入3"></a>样例输入3</h4><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">6</span><br><span class="line">4 5 1 2 1 1</span><br></pre></td></tr></tbody></table></figure><h4 id="样例输出3-1"><a href="#样例输出3-1" class="headerlink" title="样例输出3"></a>样例输出3</h4><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4 5 1 2 3 6</span><br></pre></td></tr></tbody></table></figure><h3 id="题解-5"><a href="#题解-5" class="headerlink" title="题解"></a>题解</h3><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;utility&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">set&lt; pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; &gt; c;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span>{</span><br><span class="line"><span class="keyword">if</span> (l &gt; r)</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">c.<span class="built_in">insert</span>(<span class="built_in">make_pair</span>(r, l));</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">c.<span class="built_in">insert</span>(<span class="built_in">make_pair</span>(<span class="number">2e9</span>, <span class="number">1</span>));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++){</span><br><span class="line"><span class="keyword">int</span> x;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;x);</span><br><span class="line">    <span class="keyword">auto</span> itr = c.<span class="built_in">lower_bound</span>(<span class="built_in">make_pair</span>(x, <span class="number">0</span>));</span><br><span class="line">    <span class="keyword">if</span>(itr-&gt;second&lt;=x){</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d "</span>, x);</span><br><span class="line"><span class="built_in">insert</span>(itr-&gt;second, x<span class="number">-1</span>);</span><br><span class="line"><span class="built_in">insert</span>(x+<span class="number">1</span>, itr-&gt;first);</span><br><span class="line">c.<span class="built_in">erase</span>(itr);</span><br><span class="line">}<span class="keyword">else</span>{</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d "</span>, itr-&gt;second);</span><br><span class="line"><span class="built_in">insert</span>(itr-&gt;second+<span class="number">1</span>, itr-&gt;first);</span><br><span class="line">c.<span class="built_in">erase</span>(itr);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="day7-饿饿放饭"><a href="#day7-饿饿放饭" class="headerlink" title="day7-饿饿放饭"></a>day7-饿饿放饭</h2><p>有<em>𝑛</em>个同学正在排队打饭，第<em>𝑖</em>个同学排在从前往后第<em>𝑖</em>个位置。但是这天食堂内只有一个食堂阿姨，为了使同学们都能尽快的吃上饭，每一个同学在打完一份饭之后就会排在队伍的末尾先吃着打到的饭，我们知道第<em>𝑖</em>个同学的饭量为<em>𝑎𝑖</em>，也就是说第<em>𝑖</em>个同学要吃<em>𝑎𝑖</em>份饭才能吃饱，当一位同学吃饱后，他就会立刻离开食堂，不会排在队伍的末尾。食堂阿姨想知道，在打完k份饭之后，队伍的样子是怎样的，但是食堂阿姨数学不太好，想让你帮忙想想办法。</p><h4 id="输入格式-6"><a href="#输入格式-6" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行给出两个整数<em>𝑛</em>，<em>𝑘</em>。</p><p>第二行给出<em>𝑛</em>个整数<em>𝑎</em>1,<em>𝑎</em>2,……<em>𝑎𝑛</em>。</p><h4 id="输出格式-6"><a href="#输出格式-6" class="headerlink" title="输出格式"></a>输出格式</h4><p>如果食堂阿姨打饭数少于k，请输出”-1”。</p><p>否则按照队伍顺序输出每一个同学的编号。</p><h4 id="样例输入1-2"><a href="#样例输入1-2" class="headerlink" title="样例输入1"></a>样例输入1</h4><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3 3</span><br><span class="line">1 2 1</span><br></pre></td></tr></tbody></table></figure><h4 id="样例输出1-2"><a href="#样例输出1-2" class="headerlink" title="样例输出1"></a>样例输出1</h4><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></tbody></table></figure><h4 id="样例输入2-2"><a href="#样例输入2-2" class="headerlink" title="样例输入2"></a>样例输入2</h4><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4 10</span><br><span class="line">3 3 2 1</span><br></pre></td></tr></tbody></table></figure><h4 id="样例输出2-2"><a href="#样例输出2-2" class="headerlink" title="样例输出2"></a>样例输出2</h4><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1</span><br></pre></td></tr></tbody></table></figure><h4 id="样例输入3-2"><a href="#样例输入3-2" class="headerlink" title="样例输入3"></a>样例输入3</h4><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">7 10</span><br><span class="line">1 3 3 1 2 3 1</span><br></pre></td></tr></tbody></table></figure><h4 id="样例输出3-2"><a href="#样例输出3-2" class="headerlink" title="样例输出3"></a>样例输出3</h4><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">6 2 3</span><br></pre></td></tr></tbody></table></figure><h4 id="数据规模-2"><a href="#数据规模-2" class="headerlink" title="数据规模"></a>数据规模</h4><p>数据保证1≤<em>𝑛</em>≤1e5, 0≤<em>𝑘</em>≤1e14, 1≤<em>𝑎𝑖</em>≤1e9。</p><h3 id="题解-6"><a href="#题解-6" class="headerlink" title="题解"></a>题解</h3><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ios&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;utility&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 1000000001</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">showpq</span><span class="params">(priority_queue&lt;pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; &gt; g)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">while</span> (!g.<span class="built_in">empty</span>()) {</span><br><span class="line">cout &lt;&lt; g.<span class="built_in">top</span>().first &lt;&lt; <span class="string">" "</span> &lt;&lt; g.<span class="built_in">top</span>().second &lt;&lt; endl;</span><br><span class="line">g.<span class="built_in">pop</span>();</span><br><span class="line">}</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">ios_base::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">priority_queue&lt;pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; &gt; p1;</span><br><span class="line"><span class="keyword">int</span> n, k;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; k;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++){</span><br><span class="line"><span class="keyword">int</span> x; cin &gt;&gt; x;</span><br><span class="line">p1.<span class="built_in">push</span>(<span class="built_in">make_pair</span>(i, x));</span><br><span class="line">}</span><br><span class="line"><span class="built_in">showpq</span>(p1);</span><br><span class="line"><span class="comment">// while(!p1.empty()){</span></span><br><span class="line"><span class="comment">// </span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// ll s;</span></span><br><span class="line"><span class="comment">// ll a[]={};</span></span><br><span class="line"><span class="comment">// int n, k;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// int main(){</span></span><br><span class="line"><span class="comment">// cin &gt;&gt; n &gt;&gt; k;</span></span><br><span class="line"><span class="comment">// for(int i = 1; i &lt;= n; i++){</span></span><br><span class="line"><span class="comment">// cin &gt;&gt; a[i];</span></span><br><span class="line"><span class="comment">// s+=a[i];</span></span><br><span class="line"><span class="comment">// }</span></span><br><span class="line"><span class="comment">// if(s &lt;= k){</span></span><br><span class="line"><span class="comment">// cout &lt;&lt; -1;</span></span><br><span class="line"><span class="comment">// }else{</span></span><br><span class="line"><span class="comment">// while()</span></span><br><span class="line"><span class="comment">// for(int i = 1; i &lt;= n; i++){</span></span><br><span class="line"><span class="comment">// a[i]-=1;</span></span><br><span class="line"><span class="comment">// }</span></span><br><span class="line"><span class="comment">// for(int i = 1; i &lt;= n; i++){</span></span><br><span class="line"><span class="comment">// s+=a[i];</span></span><br><span class="line"><span class="comment">// }</span></span><br><span class="line"><span class="comment">// }</span></span><br><span class="line"><span class="comment">// }</span></span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> code </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>macOS添加c++万能头-Vol0.2</title>
      <link href="/2022/04/13/macOS%E6%B7%BB%E5%8A%A0c-%E4%B8%87%E8%83%BD%E5%A4%B4-Vol0-2/"/>
      <url>/2022/04/13/macOS%E6%B7%BB%E5%8A%A0c-%E4%B8%87%E8%83%BD%E5%A4%B4-Vol0-2/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><h3 id="为什么会有vol0-2"><a href="#为什么会有vol0-2" class="headerlink" title="为什么会有vol0.2 ?"></a>为什么会有vol0.2 ?</h3><p>最近几次Xcode更新我的万能头都会消失，上一篇的方法失效。</p><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><ol><li>打开访达，选中Xcode.app，command+I 打开简介，</li><li>将读和写的权限打开，然后右键Xcode.app, 显示包内容。</li><li>进入目标目录<figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include</span><br></pre></td></tr></tbody></table></figure></li></ol><ol start="4"><li>然后新建一个bits文件夹，在文件夹内新建stdc++.h文件<br></li><li>最后将以下内容复制到stdc++.h文件内即可。</li></ol><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line">// C++ includes used for precompiling -*- C++ -*-</span><br><span class="line"> </span><br><span class="line">// Copyright (C) 2003-2014 Free Software Foundation, Inc.</span><br><span class="line">//</span><br><span class="line">// This file is part of the GNU ISO C++ Library.  This library is free</span><br><span class="line">// software; you can redistribute it and/or modify it under the</span><br><span class="line">// terms of the GNU General Public License as published by the</span><br><span class="line">// Free Software Foundation; either version 3, or (at your option)</span><br><span class="line">// any later version.</span><br><span class="line"> </span><br><span class="line">// This library is distributed in the hope that it will be useful,</span><br><span class="line">// but WITHOUT ANY WARRANTY; without even the implied warranty of</span><br><span class="line">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span><br><span class="line">// GNU General Public License for more details.</span><br><span class="line"> </span><br><span class="line">// Under Section 7 of GPL version 3, you are granted additional</span><br><span class="line">// permissions described in the GCC Runtime Library Exception, version</span><br><span class="line">// 3.1, as published by the Free Software Foundation.</span><br><span class="line"> </span><br><span class="line">// You should have received a copy of the GNU General Public License and</span><br><span class="line">// a copy of the GCC Runtime Library Exception along with this program;</span><br><span class="line">// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see</span><br><span class="line">// &lt;http://www.gnu.org/licenses/&gt;.</span><br><span class="line"> </span><br><span class="line">/** @file stdc++.h</span><br><span class="line"> *  This is an implementation file for a precompiled header.</span><br><span class="line"> */</span><br><span class="line"> </span><br><span class="line">// 17.4.1.2 Headers</span><br><span class="line"> </span><br><span class="line">// C</span><br><span class="line">#ifndef _GLIBCXX_NO_ASSERT</span><br><span class="line">#include &lt;cassert&gt;</span><br><span class="line">#endif</span><br><span class="line">#include &lt;cctype&gt;</span><br><span class="line">#include &lt;cerrno&gt;</span><br><span class="line">#include &lt;cfloat&gt;</span><br><span class="line">#include &lt;ciso646&gt;</span><br><span class="line">#include &lt;climits&gt;</span><br><span class="line">#include &lt;clocale&gt;</span><br><span class="line">#include &lt;cmath&gt;</span><br><span class="line">#include &lt;csetjmp&gt;</span><br><span class="line">#include &lt;csignal&gt;</span><br><span class="line">#include &lt;cstdarg&gt;</span><br><span class="line">#include &lt;cstddef&gt;</span><br><span class="line">#include &lt;cstdio&gt;</span><br><span class="line">#include &lt;cstdlib&gt;</span><br><span class="line">#include &lt;cstring&gt;</span><br><span class="line">#include &lt;ctime&gt;</span><br><span class="line"> </span><br><span class="line">#if __cplusplus &gt;= 201103L</span><br><span class="line">#include &lt;ccomplex&gt;</span><br><span class="line">#include &lt;cfenv&gt;</span><br><span class="line">#include &lt;cinttypes&gt;</span><br><span class="line">#include &lt;cstdbool&gt;</span><br><span class="line">#include &lt;cstdint&gt;</span><br><span class="line">#include &lt;ctgmath&gt;</span><br><span class="line">#include &lt;cwchar&gt;</span><br><span class="line">#include &lt;cwctype&gt;</span><br><span class="line">#endif</span><br><span class="line"> </span><br><span class="line">// C++</span><br><span class="line">#include &lt;algorithm&gt;</span><br><span class="line">#include &lt;bitset&gt;</span><br><span class="line">#include &lt;complex&gt;</span><br><span class="line">#include &lt;deque&gt;</span><br><span class="line">#include &lt;exception&gt;</span><br><span class="line">#include &lt;fstream&gt;</span><br><span class="line">#include &lt;functional&gt;</span><br><span class="line">#include &lt;iomanip&gt;</span><br><span class="line">#include &lt;ios&gt;</span><br><span class="line">#include &lt;iosfwd&gt;</span><br><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#include &lt;istream&gt;</span><br><span class="line">#include &lt;iterator&gt;</span><br><span class="line">#include &lt;limits&gt;</span><br><span class="line">#include &lt;list&gt;</span><br><span class="line">#include &lt;locale&gt;</span><br><span class="line">#include &lt;map&gt;</span><br><span class="line">#include &lt;memory&gt;</span><br><span class="line">#include &lt;new&gt;</span><br><span class="line">#include &lt;numeric&gt;</span><br><span class="line">#include &lt;ostream&gt;</span><br><span class="line">#include &lt;queue&gt;</span><br><span class="line">#include &lt;set&gt;</span><br><span class="line">#include &lt;sstream&gt;</span><br><span class="line">#include &lt;stack&gt;</span><br><span class="line">#include &lt;stdexcept&gt;</span><br><span class="line">#include &lt;streambuf&gt;</span><br><span class="line">#include &lt;string&gt;</span><br><span class="line">#include &lt;typeinfo&gt;</span><br><span class="line">#include &lt;utility&gt;</span><br><span class="line">#include &lt;valarray&gt;</span><br><span class="line">#include &lt;vector&gt;</span><br><span class="line"> </span><br><span class="line">#if __cplusplus &gt;= 201103L</span><br><span class="line">#include &lt;array&gt;</span><br><span class="line">#include &lt;atomic&gt;</span><br><span class="line">#include &lt;chrono&gt;</span><br><span class="line">#include &lt;condition_variable&gt;</span><br><span class="line">#include &lt;forward_list&gt;</span><br><span class="line">#include &lt;future&gt;</span><br><span class="line">#include &lt;initializer_list&gt;</span><br><span class="line">#include &lt;mutex&gt;</span><br><span class="line">#include &lt;random&gt;</span><br><span class="line">#include &lt;ratio&gt;</span><br><span class="line">#include &lt;regex&gt;</span><br><span class="line">#include &lt;scoped_allocator&gt;</span><br><span class="line">#include &lt;system_error&gt;</span><br><span class="line">#include &lt;thread&gt;</span><br><span class="line">#include &lt;tuple&gt;</span><br><span class="line">#include &lt;typeindex&gt;</span><br><span class="line">#include &lt;type_traits&gt;</span><br><span class="line">#include &lt;unordered_map&gt;</span><br><span class="line">#include &lt;unordered_set&gt;</span><br><span class="line">#endif</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> c++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> macOs </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>现实与理想，哪个更重要呢？</title>
      <link href="/2022/03/16/%E7%8E%B0%E5%AE%9E%E4%B8%8E%E7%90%86%E6%83%B3%EF%BC%8C%E5%93%AA%E4%B8%AA%E6%9B%B4%E9%87%8D%E8%A6%81%E5%91%A2%EF%BC%9F/"/>
      <url>/2022/03/16/%E7%8E%B0%E5%AE%9E%E4%B8%8E%E7%90%86%E6%83%B3%EF%BC%8C%E5%93%AA%E4%B8%AA%E6%9B%B4%E9%87%8D%E8%A6%81%E5%91%A2%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<p>今天刷题快把自己菜哭了，想着转换心情买了杯到店自取，结果学校不给出。<br><br>最后免费送人了（感觉没人会拿吧<br><br>有时候真的能被自己蠢死。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>运筹学笔记</title>
      <link href="/2022/02/24/%E8%BF%90%E7%AD%B9%E5%AD%A6%E7%AC%94%E8%AE%B0/"/>
      <url>/2022/02/24/%E8%BF%90%E7%AD%B9%E5%AD%A6%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="什么是运筹学？"><a href="#什么是运筹学？" class="headerlink" title="什么是运筹学？"></a>什么是运筹学？</h1><span id="more"></span>    <blockquote><p>问题的最优解（军事、管理······）</p></blockquote><h1 id="1-线性规划-Liner-Programming"><a href="#1-线性规划-Liner-Programming" class="headerlink" title="1.线性规划(Liner Programming)"></a>1.线性规划(Liner Programming)</h1><blockquote><p>研究资源的最优利用， 设备最佳运行···</p></blockquote><h2 id="1-1线性规划的数学模型"><a href="#1-1线性规划的数学模型" class="headerlink" title="1.1线性规划的数学模型"></a>1.1线性规划的数学模型</h2><h3 id="问题1"><a href="#问题1" class="headerlink" title="问题1"></a>问题1</h3><table><thead><tr><th>——</th><th>甲</th><th>乙</th><th>丙</th><th>现有资源</th></tr></thead><tbody><tr><td>设备A</td><td>3</td><td>1</td><td>2</td><td>200</td></tr><tr><td>设备B</td><td>2</td><td>2</td><td>4</td><td>200</td></tr><tr><td>材料A</td><td>4</td><td>5</td><td>1</td><td>360</td></tr><tr><td>材料D</td><td>2</td><td>3</td><td>5</td><td>300</td></tr><tr><td>利润</td><td>40</td><td>30</td><td>50</td><td></td></tr></tbody></table><p>求最大利润：</p><p>数量(50,30,10)</p><h3 id="线性规划的数学模型三要素"><a href="#线性规划的数学模型三要素" class="headerlink" title="线性规划的数学模型三要素"></a>线性规划的数学模型三要素</h3><ul><li>决策变量</li><li>目标函数</li><li>约束条件</li></ul><blockquote><p> ==特征==：</p><ul><li><p> 解决问题的目标函数是多个决策变量的线性函数，通常是求最大值或最小值</p></li><li><p>解决问题的约束条件是一组多个决策变量的线性不等式或等式</p></li></ul></blockquote><h3 id="问题2"><a href="#问题2" class="headerlink" title="问题2"></a>问题2</h3><table><thead><tr><th align="left">星期</th><th align="left">需要人数</th></tr></thead><tbody><tr><td align="left">1</td><td align="left">300</td></tr><tr><td align="left">2</td><td align="left">300</td></tr><tr><td align="left">3</td><td align="left">350</td></tr><tr><td align="left">4</td><td align="left">400</td></tr><tr><td align="left">5</td><td align="left">480</td></tr><tr><td align="left">6</td><td align="left">600</td></tr><tr><td align="left">7</td><td align="left">550</td></tr></tbody></table><p>X1 =  (x4+x5+x6+x7+x1) &gt;= 300</p><p>···以此类推</p><h3 id="问题3"><a href="#问题3" class="headerlink" title="问题3"></a>问题3</h3><blockquote><p>一辆车需要x1=1.5    x2=1    x3=0.7    有4m的钢料，求最少圆钢产出1000量：</p></blockquote><p>列举10种不同方案</p><h3 id="课后作业-1-15-1-16-1-18"><a href="#课后作业-1-15-1-16-1-18" class="headerlink" title="课后作业 1.15 1.16 1.18"></a>课后作业 1.15 1.16 1.18</h3><h3 id="1-1-2线性规划的一般模型"><a href="#1-1-2线性规划的一般模型" class="headerlink" title="1.1.2线性规划的一般模型"></a>1.1.2线性规划的一般模型</h3><ul><li>目标函数的变量系数：价值系数</li><li>约束条件的变量系数：工艺系数</li><li>约束条件右边的常量：资源限量</li></ul><h2 id="1-2图解法"><a href="#1-2图解法" class="headerlink" title="1.2图解法"></a>1.2图解法</h2><p>和高中线性规划图解流程一致。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>线性规划解的四种形式</p><ul><li>有唯一最优解</li><li>有无界解</li><li>有多重解</li><li>无可行解</li></ul><h2 id="1-3线性规划的标准型"><a href="#1-3线性规划的标准型" class="headerlink" title="1.3线性规划的标准型"></a>1.3线性规划的标准型</h2><p>标准型为：</p><ul><li>目标函数求最大值（或求最小值）</li><li>约束条件都为等式方程</li><li>变量xj非负</li><li>常数bi非负</li></ul><p>作業：1.3第一題，</p><h2 id="1-4-单纯形法计算"><a href="#1-4-单纯形法计算" class="headerlink" title="1.4 单纯形法计算"></a>1.4 单纯形法计算</h2><p><img src="/Users/pz/zzh-blog/source/_posts/%E8%BF%90%E7%AD%B9%E5%AD%A6%E7%AC%94%E8%AE%B0.assets/image-20220310143534474.png" alt="image-20220310143534474"></p><p><img src="/Users/pz/zzh-blog/source/_posts/%E8%BF%90%E7%AD%B9%E5%AD%A6%E7%AC%94%E8%AE%B0.assets/image-20220310150609163.png" alt="image-20220310150609163"></p><h2 id="1-5-单纯形法"><a href="#1-5-单纯形法" class="headerlink" title="1.5 单纯形法"></a>1.5 单纯形法</h2><p>解的判断：</p><ul><li>唯一最优解的判断：最优表中过所有非变量的检验数非零，则线性规划具有唯一最优解</li><li>多重最优解的判断：最优表中存在非基变量的检验数为零，则线性规划具有多重最优解</li><li>无界解的判断：某个rk&gt;0 且Aik &lt;= 0 则线性规划具有无界解</li><li>无可行解的判断：（1）当用大M单纯形法计算得到的最优解并且存在Rt&gt;0时，则表明线性规划无可行解</li><li>当第一阶段的最优值w!=0时，则原问题无可行解</li></ul><h1 id="2-对偶理论"><a href="#2-对偶理论" class="headerlink" title="2. 对偶理论"></a>2. 对偶理论</h1><h2 id="2-1-对偶计算"><a href="#2-1-对偶计算" class="headerlink" title="2.1 对偶计算"></a>2.1 对偶计算</h2><h2 id="2-2-对偶性质"><a href="#2-2-对偶性质" class="headerlink" title="2.2 对偶性质"></a>2.2 对偶性质</h2><ol><li>对偶问题的对偶是原问题</li><li>原问题的上界就是对偶问题的下界（反之同理）</li><li>若原问题可行且另一个问题不可行，则原问题具有无界解</li><li>如果x0,y0是原问题和对偶问题的可行解，则当x0、y0是原问题与对偶问题的最优解当且仅当</li><li>若护卫对偶的两个问题其中一个有最优解，另一个问题也有最优解</li><li>互补松弛定理</li></ol><h1 id="4-目标规划的数学模型"><a href="#4-目标规划的数学模型" class="headerlink" title="4. 目标规划的数学模型"></a>4. 目标规划的数学模型</h1>]]></content>
      
      
      <categories>
          
          <category> note </category>
          
      </categories>
      
      
        <tags>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>马原笔记</title>
      <link href="/2022/02/22/%E9%A9%AC%E5%8E%9F%E7%AC%94%E8%AE%B0/"/>
      <url>/2022/02/22/%E9%A9%AC%E5%8E%9F%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="绪论"><a href="#绪论" class="headerlink" title="绪论"></a>绪论</h1><span id="more"></span>    <h2 id="马克思主义在当代西方的影响"><a href="#马克思主义在当代西方的影响" class="headerlink" title="马克思主义在当代西方的影响"></a>马克思主义在当代西方的影响</h2><blockquote><p> 世界的社会主义运动走入低潮，但是马克思主义的研究却走向高潮</p></blockquote><h2 id="马克思主义是什么？-4个角度"><a href="#马克思主义是什么？-4个角度" class="headerlink" title="马克思主义是什么？ 4个角度"></a>马克思主义是什么？ 4个角度</h2><ul><li>创造主体： 有马克思恩格斯创立的（狭），有后继者不断丰富和发展的科学理论体系（广）</li><li>阶级属性： 关于无产阶级解放、全人类解放和每个人自由而全面发展的学说</li><li>研究对象： 是关于自然、社会和人类思维发展一般规律的学说</li><li>主要内容： 马克思主义哲学、马克思主义政治经济学和科学社会主义是其三个基本组成内容</li></ul><h2 id="马克思主义内容的三个部分"><a href="#马克思主义内容的三个部分" class="headerlink" title="马克思主义内容的三个部分"></a>马克思主义内容的三个部分</h2><ul><li>马哲 1-3章 <strong>重点</strong></li><li>政治经济学 </li><li>科学社会主义 </li></ul><h1 id="马哲"><a href="#马哲" class="headerlink" title="马哲"></a>马哲</h1><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>19世纪40年代欧洲资本主义的发展</p>]]></content>
      
      
      
        <tags>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>macOS添加c++万能头</title>
      <link href="/2022/02/15/macOS%E6%B7%BB%E5%8A%A0c-%E4%B8%87%E8%83%BD%E5%A4%B4/"/>
      <url>/2022/02/15/macOS%E6%B7%BB%E5%8A%A0c-%E4%B8%87%E8%83%BD%E5%A4%B4/</url>
      
        <content type="html"><![CDATA[<h2 id="方法有很多我只列举一种"><a href="#方法有很多我只列举一种" class="headerlink" title="方法有很多我只列举一种."></a>方法有很多我只列举一种.</h2><span id="more"></span><blockquote><p>在xcode包里添加效果一样</p></blockquote><ol><li>聚焦搜索/Library/Developer/CommandLineTools/SDKS</li><li>找到自己当前的系统版本, 例如我目前的系统版本是Monterey 12.1, 文件夹的名字就是MacOSX12.1.sdk</li><li>进入usr文件夹</li><li>右键include文件夹, 设置全部为读和写</li><li>新建一个名为bits的文件夹</li><li>新建名为stdc++.h的文件</li></ol><p>macOS默认finder(访达)不能右键添加文件就很蛋疼, 我列举一种解决方法:</p><ul><li><p>复制当前目录, cmd+空格 输入terminal, 打开终端, 以我的系统版本12.1输入</p><figure class="highlight zsh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /Library/Developer/CommandLineTools/SDKS/MacOSX12.1.sdk/usr/include/bits/</span><br></pre></td></tr></tbody></table></figure></li><li><p>进入到目录之后然后,你可以</p><figure class="highlight zsh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch stdc++.h</span><br></pre></td></tr></tbody></table></figure></li><li><p>或者你比较熟悉终端操作,你可以用你喜欢的编辑器编辑<br>例如:</p><figure class="highlight zsh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim stdc++.h</span><br></pre></td></tr></tbody></table></figure></li></ul><h3 id="最后一步"><a href="#最后一步" class="headerlink" title="最后一步"></a>最后一步</h3><p>复制以下内容:</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line">// C++ includes used for precompiling -*- C++ -*-</span><br><span class="line"> </span><br><span class="line">// Copyright (C) 2003-2014 Free Software Foundation, Inc.</span><br><span class="line">//</span><br><span class="line">// This file is part of the GNU ISO C++ Library.  This library is free</span><br><span class="line">// software; you can redistribute it and/or modify it under the</span><br><span class="line">// terms of the GNU General Public License as published by the</span><br><span class="line">// Free Software Foundation; either version 3, or (at your option)</span><br><span class="line">// any later version.</span><br><span class="line"> </span><br><span class="line">// This library is distributed in the hope that it will be useful,</span><br><span class="line">// but WITHOUT ANY WARRANTY; without even the implied warranty of</span><br><span class="line">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span><br><span class="line">// GNU General Public License for more details.</span><br><span class="line"> </span><br><span class="line">// Under Section 7 of GPL version 3, you are granted additional</span><br><span class="line">// permissions described in the GCC Runtime Library Exception, version</span><br><span class="line">// 3.1, as published by the Free Software Foundation.</span><br><span class="line"> </span><br><span class="line">// You should have received a copy of the GNU General Public License and</span><br><span class="line">// a copy of the GCC Runtime Library Exception along with this program;</span><br><span class="line">// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see</span><br><span class="line">// &lt;http://www.gnu.org/licenses/&gt;.</span><br><span class="line"> </span><br><span class="line">/** @file stdc++.h</span><br><span class="line"> *  This is an implementation file for a precompiled header.</span><br><span class="line"> */</span><br><span class="line"> </span><br><span class="line">// 17.4.1.2 Headers</span><br><span class="line"> </span><br><span class="line">// C</span><br><span class="line">#ifndef _GLIBCXX_NO_ASSERT</span><br><span class="line">#include &lt;cassert&gt;</span><br><span class="line">#endif</span><br><span class="line">#include &lt;cctype&gt;</span><br><span class="line">#include &lt;cerrno&gt;</span><br><span class="line">#include &lt;cfloat&gt;</span><br><span class="line">#include &lt;ciso646&gt;</span><br><span class="line">#include &lt;climits&gt;</span><br><span class="line">#include &lt;clocale&gt;</span><br><span class="line">#include &lt;cmath&gt;</span><br><span class="line">#include &lt;csetjmp&gt;</span><br><span class="line">#include &lt;csignal&gt;</span><br><span class="line">#include &lt;cstdarg&gt;</span><br><span class="line">#include &lt;cstddef&gt;</span><br><span class="line">#include &lt;cstdio&gt;</span><br><span class="line">#include &lt;cstdlib&gt;</span><br><span class="line">#include &lt;cstring&gt;</span><br><span class="line">#include &lt;ctime&gt;</span><br><span class="line"> </span><br><span class="line">#if __cplusplus &gt;= 201103L</span><br><span class="line">#include &lt;ccomplex&gt;</span><br><span class="line">#include &lt;cfenv&gt;</span><br><span class="line">#include &lt;cinttypes&gt;</span><br><span class="line">#include &lt;cstdbool&gt;</span><br><span class="line">#include &lt;cstdint&gt;</span><br><span class="line">#include &lt;ctgmath&gt;</span><br><span class="line">#include &lt;cwchar&gt;</span><br><span class="line">#include &lt;cwctype&gt;</span><br><span class="line">#endif</span><br><span class="line"> </span><br><span class="line">// C++</span><br><span class="line">#include &lt;algorithm&gt;</span><br><span class="line">#include &lt;bitset&gt;</span><br><span class="line">#include &lt;complex&gt;</span><br><span class="line">#include &lt;deque&gt;</span><br><span class="line">#include &lt;exception&gt;</span><br><span class="line">#include &lt;fstream&gt;</span><br><span class="line">#include &lt;functional&gt;</span><br><span class="line">#include &lt;iomanip&gt;</span><br><span class="line">#include &lt;ios&gt;</span><br><span class="line">#include &lt;iosfwd&gt;</span><br><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#include &lt;istream&gt;</span><br><span class="line">#include &lt;iterator&gt;</span><br><span class="line">#include &lt;limits&gt;</span><br><span class="line">#include &lt;list&gt;</span><br><span class="line">#include &lt;locale&gt;</span><br><span class="line">#include &lt;map&gt;</span><br><span class="line">#include &lt;memory&gt;</span><br><span class="line">#include &lt;new&gt;</span><br><span class="line">#include &lt;numeric&gt;</span><br><span class="line">#include &lt;ostream&gt;</span><br><span class="line">#include &lt;queue&gt;</span><br><span class="line">#include &lt;set&gt;</span><br><span class="line">#include &lt;sstream&gt;</span><br><span class="line">#include &lt;stack&gt;</span><br><span class="line">#include &lt;stdexcept&gt;</span><br><span class="line">#include &lt;streambuf&gt;</span><br><span class="line">#include &lt;string&gt;</span><br><span class="line">#include &lt;typeinfo&gt;</span><br><span class="line">#include &lt;utility&gt;</span><br><span class="line">#include &lt;valarray&gt;</span><br><span class="line">#include &lt;vector&gt;</span><br><span class="line"> </span><br><span class="line">#if __cplusplus &gt;= 201103L</span><br><span class="line">#include &lt;array&gt;</span><br><span class="line">#include &lt;atomic&gt;</span><br><span class="line">#include &lt;chrono&gt;</span><br><span class="line">#include &lt;condition_variable&gt;</span><br><span class="line">#include &lt;forward_list&gt;</span><br><span class="line">#include &lt;future&gt;</span><br><span class="line">#include &lt;initializer_list&gt;</span><br><span class="line">#include &lt;mutex&gt;</span><br><span class="line">#include &lt;random&gt;</span><br><span class="line">#include &lt;ratio&gt;</span><br><span class="line">#include &lt;regex&gt;</span><br><span class="line">#include &lt;scoped_allocator&gt;</span><br><span class="line">#include &lt;system_error&gt;</span><br><span class="line">#include &lt;thread&gt;</span><br><span class="line">#include &lt;tuple&gt;</span><br><span class="line">#include &lt;typeindex&gt;</span><br><span class="line">#include &lt;type_traits&gt;</span><br><span class="line">#include &lt;unordered_map&gt;</span><br><span class="line">#include &lt;unordered_set&gt;</span><br><span class="line">#endif</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> macOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> macOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CodeForces-Educational-Round-122-A&amp;B&amp;C</title>
      <link href="/2022/02/03/CodeForces-Educational-Round-122-A-B-C/"/>
      <url>/2022/02/03/CodeForces-Educational-Round-122-A-B-C/</url>
      
        <content type="html"><![CDATA[<h1 id="A-Div-7"><a href="#A-Div-7" class="headerlink" title="A. Div. 7"></a>A. Div. 7</h1><span id="more"></span><h2 id="Detils"><a href="#Detils" class="headerlink" title="Detils"></a>Detils</h2><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> OI</span></span><br><span class="line">  <span class="built_in">freopen</span>(<span class="string">"input.txt"</span>, <span class="string">"r"</span>, stdin);</span><br><span class="line">  <span class="built_in">freopen</span>(<span class="string">"output.txt"</span>, <span class="string">"w"</span>, stdout);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">  ios_base::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">  cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">int</span> t;</span><br><span class="line">  cin &gt;&gt; t;</span><br><span class="line">  <span class="keyword">while</span> (t--) {</span><br><span class="line">    <span class="keyword">int</span> a;</span><br><span class="line">    cin &gt;&gt; a;</span><br><span class="line">    <span class="keyword">int</span> tmp = a / <span class="number">7</span> * <span class="number">7</span>;</span><br><span class="line">    <span class="keyword">int</span> c = a / <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">int</span> d = tmp / <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">int</span> v = a % <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">if</span> (a % <span class="number">7</span> == <span class="number">0</span>) {</span><br><span class="line">      cout &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">    } <span class="keyword">else</span> <span class="keyword">if</span> (c == d) {</span><br><span class="line">      cout &lt;&lt; tmp &lt;&lt; endl;</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">10</span>; i++) {</span><br><span class="line">        <span class="keyword">int</span> ss = c * <span class="number">10</span> + i;</span><br><span class="line">        <span class="keyword">if</span> (ss % <span class="number">7</span> == <span class="number">0</span>) {</span><br><span class="line">          cout &lt;&lt; ss &lt;&lt; endl;</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h1 id="B-Minority"><a href="#B-Minority" class="headerlink" title="B. Minority"></a>B. Minority</h1><h2 id="Detils-1"><a href="#Detils-1" class="headerlink" title="Detils"></a>Detils</h2><h2 id="Solution-1"><a href="#Solution-1" class="headerlink" title="Solution"></a>Solution</h2><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>{</span><br><span class="line">  string s;</span><br><span class="line">  cin &gt;&gt; s;</span><br><span class="line">  <span class="keyword">int</span> zero = <span class="built_in"><span class="keyword">int</span></span>(<span class="built_in">count</span>(s.<span class="built_in">begin</span>(),s.<span class="built_in">end</span>(),<span class="string">'0'</span>));</span><br><span class="line">  <span class="keyword">int</span> one = <span class="built_in"><span class="keyword">int</span></span>(<span class="built_in">count</span>(s.<span class="built_in">begin</span>(),s.<span class="built_in">end</span>(),<span class="string">'1'</span>));</span><br><span class="line">  <span class="keyword">int</span> ans = <span class="built_in">min</span>(zero,one);</span><br><span class="line">  ans -= zero ==one;</span><br><span class="line">  cout &lt;&lt; ans &lt;&lt; <span class="string">'\n'</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">  <span class="meta">#<span class="meta-keyword">ifndef</span> OI</span></span><br><span class="line">    <span class="built_in">freopen</span>(<span class="string">"input.txt"</span>, <span class="string">"r"</span>, stdin);</span><br><span class="line">    <span class="built_in">freopen</span>(<span class="string">"output.txt"</span>, <span class="string">"w"</span>, stdout);</span><br><span class="line">  <span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    ios_base::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">int</span> t;</span><br><span class="line">  cin &gt;&gt; t;</span><br><span class="line">  <span class="keyword">while</span> (t--) {</span><br><span class="line">    <span class="built_in">solve</span>();</span><br><span class="line">  }</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h1 id="C-Kill-the-Monster"><a href="#C-Kill-the-Monster" class="headerlink" title="C. Kill the Monster"></a>C. Kill the Monster</h1><h2 id="Detils-2"><a href="#Detils-2" class="headerlink" title="Detils"></a>Detils</h2><h2 id="Solution-2"><a href="#Solution-2" class="headerlink" title="Solution"></a>Solution</h2><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdint&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdexcept&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int64_t</span> <span class="title">ceil_div</span><span class="params">(<span class="keyword">int64_t</span> a, <span class="keyword">int64_t</span> b)</span></span>{</span><br><span class="line">  <span class="keyword">return</span> a / b +((a ^ b) &gt; <span class="number">0</span> &amp;&amp; a % b != <span class="number">0</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">win</span><span class="params">(<span class="keyword">int64_t</span> HC, <span class="keyword">int64_t</span> DC, <span class="keyword">int64_t</span> HM, <span class="keyword">int64_t</span> DM)</span></span>{</span><br><span class="line">  <span class="keyword">int64_t</span> our_attacks = <span class="built_in">ceil_div</span>(HM, DC);</span><br><span class="line">  <span class="keyword">int64_t</span> their_attacks = <span class="built_in">ceil_div</span>(HC, DM);</span><br><span class="line">  <span class="keyword">return</span>  our_attacks &lt;= their_attacks;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span> </span>{</span><br><span class="line">  <span class="keyword">int64_t</span> HC, DC, HM, DM, K, W, A;</span><br><span class="line">  cin &gt;&gt; HC &gt;&gt; DC &gt;&gt; HM &gt;&gt; DM &gt;&gt; K &gt;&gt; W &gt;&gt; A;</span><br><span class="line">  <span class="keyword">bool</span> ans = <span class="literal">false</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int64_t</span> w = <span class="number">0</span>; w &lt;= K; w++) {</span><br><span class="line">    <span class="keyword">int64_t</span> a = K - w;</span><br><span class="line">    ans = ans || <span class="built_in">win</span>(HC + a * A, DC + w * W, HM, DM);</span><br><span class="line">  }</span><br><span class="line">  cout &lt;&lt; (ans ? <span class="string">"YES"</span> : <span class="string">"NO"</span>) &lt;&lt; <span class="string">'\n'</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">  ios_base::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">  cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> OI</span></span><br><span class="line">  <span class="built_in">freopen</span>(<span class="string">"input.txt"</span>, <span class="string">"r"</span>, stdin);</span><br><span class="line">  <span class="built_in">freopen</span>(<span class="string">"output.txt"</span>, <span class="string">"w"</span>, stdout);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">  <span class="keyword">int</span> n;</span><br><span class="line">  cin &gt;&gt; n;</span><br><span class="line">  <span class="keyword">while</span> (n--) {</span><br><span class="line">    <span class="built_in">solve</span>();</span><br><span class="line">  }</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> Code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Code </tag>
            
            <tag> CF </tag>
            
            <tag> Solution </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>macOS 配置VSCode code runner c++</title>
      <link href="/2022/01/30/macOS-%E9%85%8D%E7%BD%AEVSCode-code-runner-c/"/>
      <url>/2022/01/30/macOS-%E9%85%8D%E7%BD%AEVSCode-code-runner-c/</url>
      
        <content type="html"><![CDATA[<h1 id="配置前准备"><a href="#配置前准备" class="headerlink" title="配置前准备"></a>配置前准备</h1><ul><li> VSCode</li></ul><h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><span id="more"></span><h2 id="下载code-runner插件"><a href="#下载code-runner插件" class="headerlink" title="下载code runner插件"></a>下载code runner插件</h2><h2 id="在settings-json添加"><a href="#在settings-json添加" class="headerlink" title="在settings.json添加"></a>在settings.json添加</h2><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"cpp"</span>: <span class="string">"cd $dir &amp;&amp; g++ -std=c++17 $fileName -o $fileNameWithoutExt &amp;&amp; $dir$fileNameWithoutExt"</span></span><br></pre></td></tr></tbody></table></figure><h2 id="创建如下几个文件"><a href="#创建如下几个文件" class="headerlink" title="创建如下几个文件"></a>创建如下几个文件</h2><pre><code>- input.txt- output.txt- main.cpp</code></pre><h2 id="在main-cpp里添加下列"><a href="#在main-cpp里添加下列" class="headerlink" title="在main.cpp里添加下列"></a>在main.cpp里添加下列</h2><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> OI</span></span><br><span class="line">  <span class="built_in">freopen</span>(<span class="string">"input.txt"</span>, <span class="string">"r"</span>, stdin) ;</span><br><span class="line">  <span class="built_in">freopen</span>(<span class="string">"output.txt"</span>, <span class="string">"w"</span>, stdout) ;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></tbody></table></figure><h1 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h1>    ]]></content>
      
      
      <categories>
          
          <category> C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> VS Code </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ncm/qmc转mp3</title>
      <link href="/2022/01/21/ncm-qmc%E8%BD%ACmp3/"/>
      <url>/2022/01/21/ncm-qmc%E8%BD%ACmp3/</url>
      
        <content type="html"><![CDATA[<h1 id="你需要准备"><a href="#你需要准备" class="headerlink" title="你需要准备"></a>你需要准备</h1><ul><li>浏览器</li><li>准备转换格式的ncm/qmc文件</li></ul><h1 id="具体步骤"><a href="#具体步骤" class="headerlink" title="具体步骤"></a>具体步骤</h1><span id="more"></span><blockquote><p><a href="https://ncm.worthsee.com/">https://ncm.worthsee.com/</a></p></blockquote><p>没错, 我只是安利一个网站, 希望觉得不错的朋友, 有能力的可以支持下这个网站.</p>]]></content>
      
      
      <categories>
          
          <category> Music </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Music </tag>
            
            <tag> NeteaseMusic </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>云服务器重装系统后ssh无法登陆的问题及解决方案</title>
      <link href="/2022/01/19/Debug/"/>
      <url>/2022/01/19/Debug/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h2 id="提示警告信息如下："><a href="#提示警告信息如下：" class="headerlink" title="提示警告信息如下："></a>提示警告信息如下：</h2><p>@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@<br>@ WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED! @<br>@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@<br>IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!<br>Someone could be eavesdropping on you right now (man-in-the-middle attack)!<br>It is also possible that the RSA host key has just been changed.<br>The fingerprint for the RSA key sent by the remote host is<br>08:98:a9:cc:f8:37:20:6b:b4:b1:6c:3a:15:b9:a9:92.<br>Please contact your system administrator.<br>Add correct host key in /home/arnold/.ssh/known_hosts to get rid of this message.<br>Offending key in /home/arnold/.ssh/known_hosts:2<br>RSA host key for 10.18.46.111 has changed and you have requested strict checking.<br>Host key verification failed.</p><h2 id="原因分析："><a href="#原因分析：" class="headerlink" title="原因分析："></a>原因分析：</h2><p>It is also possible that a host key has just been changed.</p><p>我之前对ssh服务器重装了系统，导致所有与原系统建立过ssh连接的系统都无法再建立连接，因为在于原系统建立首次连接时，双方相互记录了对方的公钥（ssh基于非对称密钥技术），在ssh服务主机重装系统后，公钥改变了，任以旧版本公钥的主机自然是无法与新系统连接的。</p><p>网上还有分析为ssh主机被人黑了，并在消除入侵记录时对known_hosts文件做了改动。当然也不排除这种可能，但我估计我是没那个福气了：）</p><h2 id="解决方案："><a href="#解决方案：" class="headerlink" title="解决方案："></a>解决方案：</h2><p>删除~/.ssh/known_hosts文件，或者如果你可以判断出known_hosts中原ssh服务器的公钥，删去那部分，</p><figure class="highlight zsh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm ~/.ssh/known_hosts</span><br></pre></td></tr></tbody></table></figure><p>然后后再次建立新的连接，即可获得新的公钥。</p>]]></content>
      
      
      <categories>
          
          <category> Code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ssh </tag>
            
            <tag> debug </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>clashx如何实现终端代理</title>
      <link href="/2022/01/18/clashx%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E7%BB%88%E7%AB%AF%E4%BB%A3%E7%90%86/"/>
      <url>/2022/01/18/clashx%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E7%BB%88%E7%AB%AF%E4%BB%A3%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="一-在clashx中复制终端代理命令"><a href="#一-在clashx中复制终端代理命令" class="headerlink" title="一.在clashx中复制终端代理命令"></a>一.在clashx中复制终端代理命令</h1><blockquote><p>macOS中为cmd+c</p></blockquote><span id="more"></span>    <h1 id="二-设置clashx为全局模式"><a href="#二-设置clashx为全局模式" class="headerlink" title="二.设置clashx为全局模式"></a>二.设置clashx为全局模式</h1><h1 id="三-打开终端复制命令"><a href="#三-打开终端复制命令" class="headerlink" title="三.打开终端复制命令"></a>三.打开终端复制命令</h1><h2 id="局限"><a href="#局限" class="headerlink" title="局限"></a>局限</h2><p>这样就能在当前终端的窗口实现代理, 但是存在一个问题: 关闭当前终端窗口代理就消失了.</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>编辑.zshrc. (这是我的路径, 每个系统可能有所不同)</p><figure class="highlight zsh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.zshrc</span><br></pre></td></tr></tbody></table></figure><p>如果你是bash, 那么:</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.bashrc</span><br></pre></td></tr></tbody></table></figure><p>在.zshrc或者.bashrc中添加在clashx复制的终端代理命令</p><h2 id="检验是否成功代理"><a href="#检验是否成功代理" class="headerlink" title="检验是否成功代理"></a>检验是否成功代理</h2><p>在终端输入以下:</p><figure class="highlight zsh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl cip.cc</span><br></pre></td></tr></tbody></table></figure><p>如果显示的ip已经变成代理, 那么大功告成!</p><blockquote><p>OK, 享受秒连的快感吧~</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> proxy </category>
          
      </categories>
      
      
        <tags>
            
            <tag> proxy </tag>
            
            <tag> clashx </tag>
            
            <tag> terminal </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何在华为手机安装苹方字体</title>
      <link href="/2022/01/18/%E5%A6%82%E4%BD%95%E5%9C%A8%E5%8D%8E%E4%B8%BA%E6%89%8B%E6%9C%BA%E5%AE%89%E8%A3%85%E8%8B%B9%E6%96%B9%E5%AD%97%E4%BD%93/"/>
      <url>/2022/01/18/%E5%A6%82%E4%BD%95%E5%9C%A8%E5%8D%8E%E4%B8%BA%E6%89%8B%E6%9C%BA%E5%AE%89%E8%A3%85%E8%8B%B9%E6%96%B9%E5%AD%97%E4%BD%93/</url>
      
        <content type="html"><![CDATA[<h1 id="只需三步"><a href="#只需三步" class="headerlink" title="只需三步"></a>只需三步</h1><span id="more"></span>    <ul><li><p>Step 1: Download the hwt document. CV and download it. URL:<a href="https://pan.baidu.com/1ChDuPnvAQWmMrldhsXazog">https://pan.baidu.com/1ChDuPnvAQWmMrldhsXazog</a>. And the extraction code is : yikk</p></li><li><p>Step 2: Move this document to System catalog in Huawei/theme.</p></li><li><p>Step 3:Open the default theme application. And you can install that theme including the fonts you need.</p></li></ul><blockquote><p>I just want the fonts, so I just install the fonts. If you like the theme, keep it fine.</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Font </category>
          
      </categories>
      
      
        <tags>
            
            <tag> font </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于bumblebee的安装Archlinux双显卡驱动</title>
      <link href="/2022/01/18/%E5%9F%BA%E4%BA%8Ebumblebee%E7%9A%84%E5%AE%89%E8%A3%85Archlinux%E5%8F%8C%E6%98%BE%E5%8D%A1%E9%A9%B1%E5%8A%A8/"/>
      <url>/2022/01/18/%E5%9F%BA%E4%BA%8Ebumblebee%E7%9A%84%E5%AE%89%E8%A3%85Archlinux%E5%8F%8C%E6%98%BE%E5%8D%A1%E9%A9%B1%E5%8A%A8/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><p>众所周知，自从高性能独立图形处理器出现之后，很多便携式计算机就会采取一种双显卡的设计：节能的核心图形处理器用于渲染常规的桌面环境，而高性能的独立图形处理器则负责渲染高需求的应用程序。这种技术被称作Optimus智能显卡切换。但是英伟达经常被Linux用户诟病的原因之一，便是一直不对Linux平台上心，不仅没有Linux下的Optimus支持，驱动程序更新也慢半拍。<br>这意味着，Linux用户必须在一次会话中一直使用核心显卡或者一直使用独立显卡;一直使用核心显卡会很节能，但是Hold不住某些应用程序(比如现在很多巨型的3D游戏已经通过Steam登陆了Linux平台)，而一直使用独立显卡将会非常耗电，即使你在做很简单的工作。<br>所幸的是，Linux平台上有一个有名的第三方项目，名叫Bumblebee(大黄蜂)。这个项目目的就是给Linux提供类似Optimus技术的支持。这个项目以前并不出名，但是它某个版本的安装脚本install.sh多敲了一个空格，从而错误地删掉了所有用户的整个/usr，这个事件使它迅速出名并获得了大量的技术支持。这么想也是因祸得福吧。</p><h1 id="一、配置bumblebee"><a href="#一、配置bumblebee" class="headerlink" title="一、配置bumblebee"></a>一、配置bumblebee</h1><p>笔者所有指令对应于Arch Linux 64位版。<br>闲话收住，现在开始正式配置我们的双显卡。首先，安装英伟达官方的显卡驱动程序：<br>sudo pacman -S nvidia</p><p>选择和你目前的操作系统相匹配的驱动程序，比如笔者的是Linux 4.9内核，我就应该选带有linux49字样的包。等待安装完成，期间你应该会看到类似的输出：</p><p>然后安装：bumblebee软件包：</p><figure class="highlight zsh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S bumblebee</span><br></pre></td></tr></tbody></table></figure><p>安装完成之后，记得检查当前用户是否在用户组“bumblebee”内。如果不是，请手动添加。重启计算机，以使英伟达驱动被正确加载，并使bumblebee守护进程启动。</p><h1 id="二、测试bumblebee"><a href="#二、测试bumblebee" class="headerlink" title="二、测试bumblebee"></a>二、测试bumblebee</h1><p>Bumblebee提供了指令optirun，以使用户在会话仍然以集成显卡渲染的情况下，使用独立显卡渲染指定的应用。<br>如果你能正常使用optirun指令，那么你的配置就完成了。</p><h1 id="三、注意"><a href="#三、注意" class="headerlink" title="三、注意"></a>三、注意</h1><p>如果你遇到了使用optirun指令会让整个会话崩溃的情况，那么有两个地方你需要检查：</p><ol><li><p> 你是否安装了正确的nvidia包;</p></li><li><p> 尝试使用最新的bumblebee仓库里的代码自行编译，不要使用发行版仓库提供的版本。</p></li></ol><p>Bumblebee项目不兼容Vulkan(新的图形接口)，这意味着如果你想体验Vulkan就必须让整个会话使用独立显卡渲染。</p><p>在Steam下，可以通过修改游戏的高级启动选项为：optirun %command% 来指定该游戏运行在独立显卡上。</p><p>虽然Bumblebee有很多缺陷，包括不能支持Vulkan，但是对于Linux用户来说，它是在Linux上实现Optimus技术的唯一途径。希望本教程能对部分Linux用户有所帮助。</p>]]></content>
      
      
      <categories>
          
          <category> Code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Archlinux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>六级复习资料</title>
      <link href="/2022/01/17/%E5%85%AD%E7%BA%A7%E5%BF%85%E8%BF%87%EF%BC%81%EF%BC%81/"/>
      <url>/2022/01/17/%E5%85%AD%E7%BA%A7%E5%BF%85%E8%BF%87%EF%BC%81%EF%BC%81/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h2 id="翻译-写作"><a href="#翻译-写作" class="headerlink" title="翻译/写作"></a>翻译/写作</h2><h3 id="主动"><a href="#主动" class="headerlink" title="主动"></a>主动</h3><p>很简单直接略过</p><h3 id="被动"><a href="#被动" class="headerlink" title="被动"></a>被动</h3><ul><li><p>很多人认为合作比个人能力更重要</p></li><li><p>Cooperation is cliamed to be more crucial than personal ability.</p></li></ul><ul><li>人们普遍认为网购已经成为一种流行趋势</li><li>Online shopping is <u>argued</u> to be a popular trend among the young and the old.</li></ul><ul><li>在过去的几十年里，政府采取了各种措施防止灾害发生</li><li>Various measures,in the past decades, have been taken to prevent disasters.</li></ul><ul><li>最近，中国科学院院出版了关于其最新科学发现与未来一年展望的年度系列报告</li><li>A annual report about its latest scientific fingings and the prospect of the next year was recently published by Chinese Academy of Sciences.</li></ul><blockquote><p><b>Tip:中文的主动句翻译到英文多为被动句</b></p></blockquote><h3 id="并列句"><a href="#并列句" class="headerlink" title="并列句"></a>并列句</h3><p>常见逻辑关系词</p><ul><li>表示因果<ul><li>表示原因<ul><li>because    in that    as    since</li><li>Because of=be responsible for=due to=owing to=thanks to</li></ul></li><li>表示结果<ul><li>so=hence=therefore=thereby=thus=consequently=in consequence = as a result/consequence</li></ul></li></ul></li><li>表示对比<ul><li>相似性对比<ul><li>Likewise = similarly = equally simultaneously = at the same time =meanwhile</li></ul></li><li>表示差异性对比<ul><li>but , by contrast = conversely = alternatively = on the contrary = on the other hand = otherwise = while = whereas</li></ul></li><li>表示递进<ul><li>Besides = also = in addition = moreover = furthermore = put another way</li></ul></li><li>表示让步<ul><li>Despite = in spite of = notwithstanding = although = though = as</li><li>certainly = of course = indeed </li><li>There is no doubt that = there is no denying that 不可否认的是</li><li>In effect/fact/reality = indeed = virtually 实际上</li></ul></li><li>表示引出新对象<ul><li>About = concerning = regarding = with regard to = as for/to = in respect of </li><li>In terms of 就······而论，在···方面</li><li>when it comes to···    当提到···时</li></ul></li><li>表示强调<ul><li>Above all = most important </li><li>in effect / fact / reality = indeed = virtually</li></ul></li><li>表示总结<ul><li>on the whole = all in all = overall = in conclusion</li><li>in short</li></ul></li><li>举例<ul><li>Like = such as = for instance / example = a good case in point is</li></ul></li></ul></li></ul><ul><li>在过去的一千年里，乌镇的水系和生活方式并为经历多少变化时一座展现古文明的博物馆。</li><li>In the past thousand years, the water system and the lifeway in Wuzhen have not gone through many changes.Therefore, it now is the museum  to show ancient civilization.</li></ul><ul><li>在山东潍坊市，风筝不仅仅是玩具，而且还是这座城市文化的标志。</li><li>In Weifang, Shandong, kites are not only toys but also the symbols of cultures of the city.</li></ul><ul><li>这些资金用于改善教育设施、购买书籍，使16万多所中小学收益。资金还用于购置音乐和绘画器材。现在农村和山区的儿童可以与沿海城市的儿童一样上音乐课和绘画课。</li><li><del><b>These funds is used to improving the tools of education and buying books, benefited more than 1.6 million schools.As the same time, these fund are also used to buying the musical and painting tools. Now, child in country and mountain areas can take the musicial lesson and the painting lessons as same as the child living in city.</b></del></li><li><b><font color="blue">These funds are used to improve educational facilities, purchase books and more than 160 thousand primary schools and middle schools benefits. As a consequence, nowadays the children in rural areas can have music and painting classes as same as the children do in coastal cities.</font></b></li></ul><ul><li>由于这个传统，许多年轻人婚后继续与父母同住。今天，这个传统正在改变。随着住房条件的改善，许多越来越多年轻夫妇选择与父母分开住。但他们之间的联系依然很紧密。许多老年人仍然帮着照看长辈。年轻夫妇也抽时间探望父母，特别是在春节和中秋节等重要节日。</li><li><b>As a result of this tradition, many young people continue to live with parents after marriage. <u>By contrast</u>, today, the tradition is changing.With the improvement of housing conditions, an increasing number of young couples chose to live apart from their parents. <u>Nevertheless</u>, the connection between them remains strong. Many old people still have to look after their grandchildren. At the same time, yong couples also get around to visit their parents, especially during the holidays, as the spring festival and Mid-autumn Festival.</b></li></ul><h3 id="复合句"><a href="#复合句" class="headerlink" title="复合句"></a>复合句</h3><h4 id="主语从句"><a href="#主语从句" class="headerlink" title="主语从句"></a>主语从句</h4><blockquote><p><b><font color="red">It is····that</font></b></p></blockquote><ul><li>大学教育极大地促进了社会的进步时显而易见的。</li><li><strong><font color="blue">It is <font color="red">beyond dispute(无可争议的)</font> that university education spromotes the progress of our society obviously.</font></strong></li></ul><h4 id="同位语"><a href="#同位语" class="headerlink" title="同位语"></a>同位语</h4><blockquote><p><b><font color="red">用于名词后面</font></b></p></blockquote><ul><li>I like the cat, which is cute animal.</li><li>Garbage sorting, a necessary behavior to control pollution, proves quite crucial throughout China.</li><li>Hunting for jobs, a hot topic among undergraduates, has become the public concern recently</li><li>Optimism, an active mentality, plays a key role in the general routine of everyday living.</li></ul><h4 id="定语和定语从句"><a href="#定语和定语从句" class="headerlink" title="定语和定语从句"></a>定语和定语从句</h4><ul><li>I love the girl of kindness</li><li>I love the girl as kind as an angel</li><li>I love the girl who keeps so kind</li></ul><h5 id="Example-定语从句"><a href="#Example-定语从句" class="headerlink" title="Example(定语从句)"></a>Example(定语从句)</h5><p>乌镇是浙江的一座古老水镇，坐落在京杭大运河畔。这是一处迷人的地方，有许多古桥、中式旅馆和餐馆。</p><p><b><del>Wu zhen is a Zhejiang ancient vallage located on the coast of Jing hang River, which is a fancy place with a group of ancient bridge, chinese hotel and restaurants.</del></b></p><p><b><font color="blue">Wuzhen, which is an ancient water town of Zhejiang province, is located near the Beijing-Hangzhou Grand Canal, which is really a charming place with many ancient bridges, Chinese style hotels and restaurants there.</font></b></p><p>剪纸(Paper cutting)是中国最为流行的传统民间艺术形式之一.中国剪纸有一千五百多年的历史,在明朝和清朝时期(The Ming and Qing Dynasties)特别流行.</p><p><strong><del>Paper cutting is the most popular arts in China, which trace back to nearly BC 500, especially got popular during the Ming and Qing Dynasties.</del></strong></p><p><strong><font color="blue">Paper cutting is one of the most popular arts in china which has a history of 1.5 thound years and was quite famous in the Ming and Qing Dynasties.</font></strong></p><h4 id="状语和状语从句"><a href="#状语和状语从句" class="headerlink" title="状语和状语从句"></a>状语和状语从句</h4><p>![image-20211214104339048](/Users/pz/Library/Application Support/typora-user-images/image-20211214104339048.png)</p><h3 id="三大经典句型"><a href="#三大经典句型" class="headerlink" title="三大经典句型"></a>三大经典句型</h3><p>![image-20211214105753838](/Users/pz/Library/Application Support/typora-user-images/image-20211214105753838.png)</p><p>![image-20211214105858346](/Users/pz/Library/Application Support/typora-user-images/image-20211214105858346.png)</p><p>![image-20211214105954939](/Users/pz/Library/Application Support/typora-user-images/image-20211214105954939.png)</p><p>![image-20211214110032622](/Users/pz/Library/Application Support/typora-user-images/image-20211214110032622.png)</p><p>![image-20211214110156238](/Users/pz/Library/Application Support/typora-user-images/image-20211214110156238.png)</p><ul><li>句子扩写</li></ul><p>Smile (    ) makes people(    ) love you.</p><p>Smile, the best means for communicating, make people who may look serious and distant love you at first sight.</p><h2 id="作文真题"><a href="#作文真题" class="headerlink" title="作文真题"></a>作文真题</h2><h3 id="题1"><a href="#题1" class="headerlink" title="题1"></a>题1</h3><p>![image-20211214111738200](/Users/pz/Library/Application Support/typora-user-images/image-20211214111738200.png)</p><h4 id="范文："><a href="#范文：" class="headerlink" title="范文："></a>范文：</h4><blockquote><p><strong><font color="red">作文开头由两句话组成：引出中心+个人观点</font></strong></p></blockquote><p><strong>There exists, among teenagers and youngster, s hot debate on the importance of motivation and methods in learning. From my perspective, it is motivation and methods that prove to be more crucial than the study itself.</strong></p><blockquote><p><strong><font color="red">第二段：引出原因分析的总体句+2~3个具体原因分析</font></strong></p></blockquote><p><strong>Quite a few factors, as a matter of fact, could account for opinion. As the primary element, Motivation can make us brave in front of difficulties. If we desire to complete heavy tasks smoothly, it is motivation that would make us be confronted with troubles without fear. One of Chinese famous businessmen, Mayun, is a good case in point. Before he became the top man known to all, he had failed thousands of times. Without motivation, he might got nothing. Besides, proper methods are crucial. Because right ways enable you to attain what you want rapidly and effective. The more efficiently you study, the greater success you will achieve.</strong></p><blockquote><p><strong><font color="red">第三段：总结+两个措施+喊口号</font></strong></p></blockquote><p><strong>In a word, motivation and methods play a vital role in the study of youngsters. So parents should educate their kids to study with a right method and motivation. As a university student, we should explore more effectively ways to learn. Only in such ways of thinking can our work be done rapidly and comfortably.</strong></p><h3 id="题2"><a href="#题2" class="headerlink" title="题2"></a>题2</h3><p>![image-20211214160741442](/Users/pz/Library/Application Support/typora-user-images/image-20211214160741442.png)</p><h4 id="范文：-1"><a href="#范文：-1" class="headerlink" title="范文："></a>范文：</h4><p><strong>There is no doubt that the issue about community responsibility has caused wide public attention recently. From my perspective, it is indispensable both in social development and individual improvement.</strong></p><p><strong>It is quite a few causes that could account for my argument. First and foremost, not only is a strong sense of community responsibility helpful to develop harmonious interpersonal relationships but also is beneficial to personal development. As we all know, the sound working atmosphere and interpersonal relationships among employees are crucial to both physical and mental pleasure. In addition, community responsibility can improve efficiency in the fast-paced modern society where time is money and efficiency holds the key to success. As a saying goes,”united, we stand; divided, we fall”. So great importance should be attached to the cultivation of the sense of community responsibility and we will eventually benefit from it.</strong></p><p><strong>From what has been mentioned above, we can safely draw the conclusion that sense of community responsibility is a kind of good personal quality, which deserves our attention. So it is worth of our attention under modern conditions. Only in this way can we have a harmonious society.</strong></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><h3 id="开头"><a href="#开头" class="headerlink" title="开头"></a>开头</h3><p><strong><font color="red">引出中心+个人观点</font></strong></p><h3 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h3><p><strong><font color="red">引出原因分析总体句+2～3个具体原因分析</font></strong></p><h4 id="无话可说？"><a href="#无话可说？" class="headerlink" title="无话可说？"></a>无话可说？</h4><ul><li><p>分类论证</p><ul><li><p>对于个人有什么影响    For individuals</p></li><li><p>对于集体有什么影响    For the collective</p></li></ul></li><li><p>举例论证</p></li></ul><h3 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h3><ul><li>Only by taking certain steps can people make full use of …</li><li>So shouldn’t human being pay much attention to the meaningful saying/problem?</li><li>So under no account could people divert attention from sth.</li><li>The more actively people face the problem, the more happily they will lead their life.</li><li>It is high time that the subject about … became a focus among youngsters.</li></ul><h2 id="作文25min-预读听力5min-听力30min-仔细阅读20min-长篇阅读15min-翻译25min-选词填空7-8min"><a href="#作文25min-预读听力5min-听力30min-仔细阅读20min-长篇阅读15min-翻译25min-选词填空7-8min" class="headerlink" title="作文25min + 预读听力5min + 听力30min + 仔细阅读20min + 长篇阅读15min + 翻译25min + 选词填空7-8min"></a>作文25min + 预读听力5min + 听力30min + 仔细阅读20min + 长篇阅读15min + 翻译25min + 选词填空7-8min</h2>]]></content>
      
      
      <categories>
          
          <category> Review material </category>
          
      </categories>
      
      
        <tags>
            
            <tag> English </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>物流成本笔记</title>
      <link href="/2022/01/17/%E7%89%A9%E6%B5%81%E6%88%90%E6%9C%AC/"/>
      <url>/2022/01/17/%E7%89%A9%E6%B5%81%E6%88%90%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<h2 id="1-物流成本管理"><a href="#1-物流成本管理" class="headerlink" title="1.物流成本管理"></a>1.物流成本管理</h2><!-- more --> <ul><li>目标成本法<ul><li>以市场为向导，围绕企业的经营利润为目标</li><li>管理范围和管理重点都以事前事中为主</li><li>管理责任强调目标成本指标的分解，各部门责任</li></ul></li><li>传统成本法<ul><li>事后为主，总结经验</li></ul></li></ul><h2 id="2-标准成本法"><a href="#2-标准成本法" class="headerlink" title="2.标准成本法"></a>2.标准成本法</h2><ul><li>实际成本 = 标准成本 + 成本差异</li></ul><blockquote><p>物流成本由物流服务的直接材料费用、直接人工费用和间接费用三部分组成。两个标准 用量标准 价格标准</p></blockquote><h2 id="物流成本管理绩效评价概述"><a href="#物流成本管理绩效评价概述" class="headerlink" title="物流成本管理绩效评价概述"></a>物流成本管理绩效评价概述</h2><hr><ul><li>评价步骤<ul><li>撰写报告</li><li>建立机构</li><li>制定方案</li><li>收集信息</li><li>进行评估</li></ul></li></ul><blockquote><p>KPI：Key Performance Indicators 关键绩效指标</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Review material </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Logistics </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
